{"version":3,"sources":["history.js","store/actions/types.js","store/actions/auth.js","store/actions/goal.js","store/actions/modal.js","store/actions/task.js","store/actions/achievement.js","store/actions/explore.js","components/Auth/AuthForm/index.js","components/common/Modal/Modal.js","components/Auth/Auth.jsx","pages/login/index.jsx","components/Menubar/MenuBarComponent.jsx","components/CalendarPanel/CalendarPanelComponent.jsx","components/AddAcc/AddAccForm.jsx","components/AccDetail/AccSegmentComponent.jsx","components/TaskBar/TaskBarComponent.jsx","components/GoalBody/AddTaskModal/AddTaskForm.jsx","components/GoalBody/AddTaskModal/AddTaskModal.jsx","components/GoalBody/GoalBodyComponent.jsx","pages/main/GoalListComponent.jsx","pages/main/CreateGoalComponent/CreateGoalComponent.jsx","pages/edit/EditGoalComponent.jsx","components/TaskBody/TaskBodyComponent.jsx","pages/edit/EditTaskComponent.jsx","pages/edit/EditPageComponent.jsx","pages/dashboard/DashBoardPanel/DashBoardPanelComponent.jsx","components/DashBoardGoalCards/DashBoardGoalCard.jsx","pages/dashboard/DashBoardCards/DashBoardCardsComponent.jsx","pages/dashboard/DashBoardComponent.jsx","pages/GoalDetail/Components/GeneralGoalInfo.jsx","pages/GoalDetail/Components/TaskInfo.jsx","pages/GoalDetail/Components/Ach.jsx","pages/GoalDetail/Components/AchInfo.jsx","pages/GoalDetail/TaskAndAchTotal.jsx","pages/GoalDetail/GoalDetailPage.jsx","pages/explore/components/RecCard.jsx","pages/explore/RecCardsGroup.jsx","pages/explore/ExplorePageComponent.jsx","pages/ExploreGoalDetail/ExploreGoalDetailPage.jsx","App.jsx","store/reducers/goalReducer.js","store/reducers/taskReducer.js","store/reducers/achievementReducer.js","store/reducers/modalReducer.js","store/reducers/exploreReducer.js","store/reducers/rootReducer.js","store/reducers/authReducer.js","store/store.js","index.js"],"names":["createBrowserHistory","SIGNUP_USER","LOGIN_USER","LOGOUT_USER","CLOSE_MODAL","OPEN_AUTH_MODAL","OPEN_ADD_TASK_MODAL","CLOSE_ADD_TASK_MODAL","OPEN_ADD_ACC_MODAL","CLOSE_ADD_ACC_MODAL","GET_ALL_GOAL","GET_GOAL","ADD_GOAL","EDIT_GOAL","DELETE_GOAL","ADD_TASK_TO_GOAL","DELETE_TASK_FROM_GOAL","EDIT_TASK_OF_SELECTED_GOAL","GET_ALL_TASK","ADD_TASK","DELETE_TASK","EDIT_TASK","GET_ACHIEVEMENTS_OF_TASK","GET_ACHIEVEMENTS_OF_GOAL","ADD_ACHIEVEMENT","EDIT_ACHIEVEMENT","DELETE_ACHIEVEMENT","EXPLORE_GET_ALL_GOAL","EXPLORE_GET_GOAL","EXPLORE_GET_ACH_BY_GOAL","signupUser","data","dispatch","axios","post","headers","then","res","user","type","actionTypes","payload","id","username","getAllGoal","get","goals","console","log","getGoal","goal","editGoal_","deleteGoal","delete","deleteGoal_","closeModal","ActionTypes","addTaskToGoal","task","title","start_at","deadline","importance","day_of_week","deleteTaskFromGoal","goal_id","task_id","deleteTask","a","get_achievements_of_task","explore_get_ach_by_goal_","achievements","CreateLoginForm","useDispatch","useForm","register","handleSubmit","watch","errors","Form","onSubmit","e","dataToForm","FormData","append","password","history","push","actionCreators","Segment","className","htmlFor","name","placeholder","ref","required","minLength","value","message","role","Button","Modal","props","ReactModal","setAppElement","children","style","overlay","position","top","left","right","bottom","backgroundColor","onClick","floated","Auth","isAuthModalOpen","useSelector","state","modal","authModal","useState","authMode","setAuthMode","form","reset","password1","password2","email","CreateSignupForm","isOpen","ButtonGroup","HomePage","onClickSignup","setState","openAuthModal","onClickLogin","this","isUserLoggedIn","center","aligned","Grid","columns","divided","marginLeft","Column","fontSize","React","Component","connect","auth","MenuBarComponent","onClickLogout","Sidebar","animation","vertical","visible","verticalAlign","rows","centered","Row","Menu","Item","as","class","Icon","size","CalendarPanelComponent","date","Date","onChange","moment","endOf","goalTitleList","goalList","map","g","List","Content","Header","relaxed","bulleted","AddAccForm","achievement","isEdit","isCreating","percentage_complete","today","undefined","startOf","unix","file","fileName","photo","description","fileChange","target","files","URL","createObjectURL","closeHandler","onPercentageCompleteChange","event","newValue","key","written_at","edit_achievement","add_achievement","GridColumn","width","src","Field","animated","hidden","Input","fluid","label","readOnly","marginTop","active","spinner","text","boxShadow","border","Group","Slider","defaultValue","aria-labelledby","step","valueLabelDisplay","renderPhoto","fileRender","renderDescription","formValues","s3prefix","put","url","imageUrl","set","achievement_id","AccSegment","addAccopen","onClickEditAchievement","onClickAddAccHandler","renderTotal","today_ts","achievement_selected","filter","length","metric","Rating","viewBox","standalone","labelComponent","height","innerRadius","colorScale","textAnchor","x","y","color","onCloseSubmit","onSetAccSubmit","ach","TaskBarComponent","acc_open","accomplishment","des","percentage_done","deleteTaskHandler","to_weekdays","num","accOpenHandler","daylist","str","d_str","d","substring","icon","isRecurrent","Object","values","AddTaskForm","setImportance","setDayOfWeek","setTitle","setStartAt","setDeadline","formData","deadline_in_ts","start_in_ts","dataForm","forEach","item","widths","Select","multiple","selection","options","format","iconPosition","dateFormat","goal_start_at","window","alert","goal_deadline","disabled","inline","AddTaskModal","isAddTaskModalOpen","addTask","GoalBodyComponent","tasks","selectedDate","addTaskModal","showAll","onClickEditGoalHandler","onClickDeleteHandler","confirm","onClickAddTaskHandler","openAddTaskModal","startAtDate","deadlineDate","tags","filtered_tasks","reduce","pre","t","weekday","includes","toTaskBar","toggle","celled","padding","circular","GoalList","onDeadlineSubmit","onGetAllGoals","todayGoalsList","selectTodayGoals","toGoalBody","CreateGoal","upload","tagOptions","preview","handleChangeStart","handleChangeDeadline","statusCode","alignItems","textAlign","maxWidth","maxHeight","minWidth","minHeight","FormField","onTagsChanged","Dropdown","search","clearable","allowAdditions","onAddItem","addTagOptions","setTag","tag","addGoal","marginRight","renderTitle","renderDeadline","renderTag","onClickHandler","withRouter","EditGoal","isEditing","selectedGoal","editGoal","defaultTagOptions","defaultTag","renderDefaultTagOptions","renderDefaultDate","re","RegExp","replace","TaskBodyComponent","editmode","readmode","onClickEditTaskHandler","neweditmode","newreadmode","onClickDeleteTaskHandler","renderDeadlineString","daystr","toLowerCase","charAt","toUpperCase","slice","editTask","handleChangeStartAt","renderEditMode","renderReadMode","EditTask","toTaskBody","EditPage","DashBoardPanel","percentage","wantedMetric","setMetric","useEffect","renderPie","animate","easing","words","wordList","rotations","rotationAngles","fontFamily","fontSizes","fontStyle","fontWeight","colors","GoalCard","getRandomInt","min","max","Math","ceil","floor","random","renderTags","randomColor","Label","horizontal","marginBottom","Card","backgroundImage","backgroundSize","Description","header","s","extra","compact","DashBoardCards","select","show","goalCardList","showOptions","renderShowbyTime","renderSelect","start","prevHandler","nextHandler","paddingTop","DashBoardComponent","getMetric","list","getWordCloud","obj","find","w","GeneralGoalInfo","row","TaskInfo","setSelect","margin","onSelect","paddingLeft","paddingBottom","Ach","dateString","AchInfo","avg","number","total","TaskAndAchTotal","selectedTask","achList","startIndex","onTaskSubmit","renderTaskInfo","taskInfo","renderAchTotal","GoalDetailPage","match","params","get_achievements_of_goal","RecCard","RecCardsGroup","RecCardList","display","ExplorePage","explore_getAllGoal","explore","ExploreGoalDetailPage","explore_getGoal","explore_get_ach_by_goal","App","path","exact","component","CreatePage","DashBoard","initialState","reducer","action","newGoal","filteredGoals","concat","filteredTasks","modifiedSelectedGoal","deleted","rest","target_delete","target_deleted_task","updated_goal","rest_delete","newTask","filtered","_","mapKeys","omit","addAcc","modalReducer","rootReducer","combineReducers","goalReducer","taskReducer","achievementReducer","exploreReducer","router","connectRouter","middlewares","store","next","result","getState","thunk","routerMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d4bb5f7.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\nexport default createBrowserHistory()","// auth //\nexport const SIGNUP_USER = 'SIGNUP_USER'\nexport const LOGIN_USER = 'LOGIN_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\n\n// modal //\nexport const CLOSE_MODAL = 'CLOSE_MODAL'\nexport const OPEN_AUTH_MODAL = 'OPEN_AUTH_MODAL'\nexport const OPEN_ADD_TASK_MODAL = 'OPEN_ADD_TASK_MODAL'\nexport const CLOSE_ADD_TASK_MODAL = 'CLOSE_ADD_TASK_MODAL'\nexport const OPEN_ADD_ACC_MODAL = 'OPEN_ADD_ACC_MODAL'\nexport const CLOSE_ADD_ACC_MODAL = 'CLOSE_ADD_ACC_MODAL'\n\n// goal //\nexport const GET_ALL_GOAL = 'GET_ALL_GOAL';\nexport const GET_GOAL = 'GET_GOAL'\nexport const ADD_GOAL = 'ADD_GOAL'\nexport const EDIT_GOAL = 'EDIT_GOAL'\nexport const DELETE_GOAL = 'DELETE_GOAL'\nexport const ADD_TASK_TO_GOAL = 'ADD_TASK_TO_GOAL'\nexport const DELETE_TASK_FROM_GOAL = 'DELETE_TASK_FROM_GOAL'\nexport const EDIT_TASK_OF_SELECTED_GOAL = 'EDIT_TASK_OF_SELECTED_GOAL'\n\n// task //\nexport const GET_ALL_TASK = 'GET_ALL_TASK'\nexport const ADD_TASK = 'ADD_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const EDIT_TASK = 'EDIT_TASK'\n// export const EDIT_TASK_OF_ACHIEVEMENT = 'EDIT_TASK_OF_ACHIEVEMENT'\n\n// achievement //\nexport const GET_ACHIEVEMENTS_OF_TASK = 'GET_ACHIEVEMENTS_OF_TASK'\nexport const GET_ACHIEVEMENTS_OF_GOAL = 'GET_ACHIEVEMENTS_OF_GOAL'\nexport const ADD_ACHIEVEMENT = 'ADD_ACHIEVEMENT'\nexport const EDIT_ACHIEVEMENT = 'EDIT_ACHIEVEMENT'\nexport const DELETE_ACHIEVEMENT = 'DELETE_ACHIEVEMENT'\n\n// explore //\nexport const EXPLORE_GET_ALL_GOAL = 'EXPLORE_GET_ALL_GOAL'\nexport const EXPLORE_GET_GOAL = 'EXPLORE_GET_GOAL'\nexport const EXPLORE_GET_ACH_BY_GOAL = 'EXPLORE_GET_ACH_BY_GOAL'","import * as actionTypes from './types'\nimport axios from 'axios'\nimport {push} from 'connected-react-router'\nimport history from '../../history'\n\nexport const signupUser_ = (user) => {\n    return {\n        type: actionTypes.SIGNUP_USER,\n        payload: {\n            id: user.id,\n            username: user.username,\n        }\n    }\n}\n\nexport const signupUser = (data) => {\n    return (dispatch) => {\n        return axios.post('/api/v1/users/signup/', data, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n        .then((res) => dispatch(signupUser_(res.data)))\n    }\n}\n\nexport const loginUser_ = (user) => {\n    console.log(\"[DEBUG] loginUser action. user: \", user)\n    return {\n        type: actionTypes.LOGIN_USER,\n        payload: {\n            id: user.id,\n            username: user.username,\n        }\n    }\n}\n\nexport const loginUser = (data) => async (dispatch) => {\n    // console.log(\"[DEBUG] data to loginUser: \", data)\n    const res   = await axios.post('/api/v1/users/login/', data)\n    // console.log(\"[DEBUG] res in loginUser: \", res)\n    dispatch(loginUser_(res.data))\n    history.push('/main')\n}\n\n// export const loginUser = (data) => {\n//     return (dispatch) => {\n//         console.log(\"[DEBUG] data to loginUser: \", data)\n//         return axios.post('/api/v1/users/login/', data, {\n//             headers: {\n//                 \"Content-Type\": \"multipart/form-data\"\n//             }\n//         })\n//         .then((res) => {dispatch(loginUser_(res.data))\n\n//         // .then((res) => dispatch(loginUser_(res.data)))\n//         .then(()=>{history.push('/main')})\n//     }\n// }\n\n\nexport const logoutUser = () => {\n    axios.post('/api/v1/users/logout/')\n    return { \n        type: actionTypes.LOGOUT_USER,\n        payload: null\n    }\n}","import * as actionTypes from './types'\nimport axios from 'axios'\nimport history from '../../history'\n\nexport const getAllGoal_ = (goals) => {\n    console.log(\"getAllGoal_ goals: \", goals)\n    return { type: actionTypes.GET_ALL_GOAL, payload: goals }\n}\n\nexport const getAllGoal = () => {\n    return dispatch => {\n        return axios.get('/api/v1/goals/')\n        .then(res => dispatch(getAllGoal_(res.data)))\n    }\n}\n\nexport const getGoal_ = (goal) => {\n    return { type: actionTypes.GET_GOAL, payload: goal }\n}\n\nexport const getGoal = (id) => {\n    return dispatch => {\n        return axios.get('/api/v1/goals/' + id + '/')\n        .then(res => {\n            dispatch(getGoal_(res.data))\n            // history.push('/edit')\n        })\n    }\n}\n\nexport const addGoal_ = (goal) => {\n    return {\n        type: actionTypes.ADD_GOAL,\n        payload: goal\n    }\n}\n\nexport const addGoal = (formData, file) => async dispatch => {\n    const s3prefix = 'https://goalingball-test.s3.amazonaws.com/'\n    console.log(\"[DEBUG] addGoal formData: \", formData)\n    if (file) {\n        const res = await axios.get('/api/v1/uploads/')\n        console.log(\"[DEBUG] response.data in addGoal: \", res)\n\n        const response = await axios.put(res.data.url, file, {\n            headers: {\n                'Content-Type': 'image/jpeg' \n            }\n        })\n\n        const imageUrl = s3prefix + res.data.key\n        console.log(\"[DEBUG] imageUrl: \", imageUrl)\n        formData.append('photo', imageUrl)\n    } else {\n        console.log(\"[DEBUG] no file found in addGoal\")\n    }\n\n    const res = await axios.post('/api/v1/goals/', formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    })\n    console.log(\"[DEBUG] res from server when adding goal: \", res.data)\n    dispatch(addGoal_(res.data))\n    history.push('/main')\n}\n\nexport const editGoal = (id, data, file) => async dispatch => {\n    \n    console.log(\"[DEBUG] editGoal data: \", data)\n    if (file) { // edit a photo or create a new one\n        const s3prefix = 'https://goalingball-test.s3.amazonaws.com/'\n        let key = ''\n        if ('photo' in data) {\n            const re = new RegExp(s3prefix)\n            key = data['photo'].replace(re, '')\n        }\n        // no photo has been set yet \n        else {\n            const res = await axios.get('/api/v1/uploads/')\n            key = res.data.key\n        }\n\n        const res = await axios.put('/api/v1/uploads/', { key })\n\n        const response = await axios.put(res.data.url, file, {\n            headers: {\n                'Content-Type': 'image/jpeg' \n            }\n        })\n        \n        const imageUrl = s3prefix + res.data.key\n        data['photo'] = imageUrl\n        // console.log(\"changed photo: \", data['photo'])\n    } \n\n    console.log('Edit goal data: ', data)\n    // const data = {\n    //     title: formData.get('title'),\n    //     photo: formData.get('photo'),\n    //     deadline: formData.get('deadline'),\n    //     tags: formData.get('tags')\n    // }\n    // const data_json = JSON.stringify(Object.fromEntries(formData))\n    // console.log(\"data_json: \", data_json)\n    \n    // console.log(\"[DEBUG] edit goal data: \", datsa)\n\n    const res = await axios.put(`/api/v1/goals/${id}/`, data, {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    \n    dispatch(editGoal_(res.data))\n    // console.log(\"pushed\")\n    history.push('/main')\n}\n\nexport const editGoal_ = (goal) => {\n    return {\n        type: actionTypes.EDIT_GOAL,\n        payload: goal,\n    }\n}\n\nexport const deleteGoal_ = (id) => {\n    return {\n        type: actionTypes.DELETE_GOAL,\n        id: id\n    }\n}\n\nexport const deleteGoal = (id) => {\n    return dispatch => {\n        return axios.delete('/api/v1/goals/'+ id)\n        .then(res => dispatch(deleteGoal_(id)))\n    }\n}\n\n\n\n","import * as ActionTypes from \"./types\"\n\nexport const closeModal = () => {\n    return {\n        type: ActionTypes.CLOSE_MODAL,\n        payload: null\n    }\n}\n\nexport const openAuthModal = () => {\n    return {\n        type: ActionTypes.OPEN_AUTH_MODAL,\n        payload: null\n    }\n}\n\nexport const openAddTaskModal = () => {\n    return {\n        type: ActionTypes.OPEN_ADD_TASK_MODAL,\n        payload: null\n    }\n}\n\nexport const closeAddTaskModal = () => {\n    return {\n        type: ActionTypes.CLOSE_ADD_TASK_MODAL,\n        payload: null\n    }\n}\n\nexport const openAddAccModal = () => {\n    return {\n        type: ActionTypes.OPEN_ADD_ACC_MODAL,\n        payload: null\n    }\n}\n\nexport const closeAddAccModal = () => {\n    return {\n        type: ActionTypes.CLOSE_ADD_ACC_MODAL,\n        payload: null\n    }\n}","import * as actionTypes from './types'\nimport axios from 'axios'\nimport history from '../../history'\nimport { closeModal } from './modal'\n\nexport const getAllTask_ = (tasks) => {\n    return { type: actionTypes.GET_ALL_TASK, payload: tasks }\n}\n\nexport const getAllTask = () => {\n    return dispatch => {\n        return axios.get('/api/v1/tasks/')\n        .then(res => dispatch(getAllTask_(res.data)))\n    }\n}\n\nexport const addTask_ = (task) => {\n    return {\n        // type: actionTypes.ADD_GOAL,\n        // title: goal.title,\n        // photo: goal.photo ? goal.photo : null, \n        // created_at: goal.created_at ? goal.created_at : null,\n        // deadline: goal.deadline ? goal.deadline : null,\n        // tags: goal.tags ? goal.tags : null\n        type: actionTypes.ADD_TASK,\n        payload: {\n            id: task.id,\n            user: task.user,\n            goal: task.goal,\n            title: task.title,\n            importance: task.importance,\n            day_of_week: task.day_of_week,\n            start_at: task.start_at,\n            deadline: task.deadline\n        }\n    }\n}\n\nexport const addTaskToGoal = task => {\n    return {\n        type: actionTypes.ADD_TASK_TO_GOAL,\n        payload: {\n            id: task.id,\n            user: task.user,\n            goal: task.goal,\n            title: task.title,\n            start_at: task.start_at,\n            deadline: task.deadline,\n            importance: task.importance,\n            day_of_week: task.day_of_week\n        }\n    }\n}\n\nexport const deleteTaskFromGoal = (goal_id, task_id) => {\n    return {\n        type: actionTypes.DELETE_TASK_FROM_GOAL,\n        payload : { goal_id, task_id }\n    }   \n}\n\nexport const addTask = (formData, file) => async dispatch => {\n    const res = await axios.post('/api/v1/tasks/', formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    }) \n    console.log(\"addTask res.data: \", res.data)\n    dispatch(addTask_(res.data))\n    // history.push('/main')\n    dispatch(closeModal())\n    dispatch(addTaskToGoal(res.data))\n}\n\nexport const deleteTask_ = (id) => {\n    return {\n        type: actionTypes.DELETE_TASK,\n        payload: id\n    }\n}\n\nexport const deleteTask = (goal_id, task_id) => async dispatch => {\n    console.log(\"[DEBUG] deleteTask start\")\n    const res = await axios.delete('/api/v1/tasks/'+ task_id + '/')\n    dispatch(deleteTask_(task_id))\n    dispatch(deleteTaskFromGoal(goal_id, task_id))\n    console.log(\"[DEBUG] sdeleteTask done\")\n}\n\n// export const deleteTask = (goal, id) => {\n//     return dispatch => {\n//         return axios.delete('/api/v1/tasks/'+ id)\n//         .then(res => \n//             dispatch(deleteTask_(id))\n//             dispatch(addTaskToGoal(goal, id))\n//         )   \n//     }\n// }\n\nexport const editTask = (task_id, data) => async dispatch => {\n    const res = await axios.put(`api/v1/tasks/${task_id}/`, data, {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n\n    console.log(\"edit task res.data: \", res.data)\n\n    dispatch({\n        type: actionTypes.EDIT_TASK,\n        payload: res.data\n    })\n    dispatch({\n        type: actionTypes.EDIT_TASK_OF_SELECTED_GOAL,\n        payload: res.data\n    })\n    // history.push('/edit')\n\n}","import * as actionTypes from './types'\nimport axios from 'axios'\nimport history from '../../history'\n\nexport const get_achievements_of_task = task_id => async dispatch => {\n     const res = await axios.get(`/api/v1/achievements/task/${task_id}/`)\n     console.log(\"[DEBUG] get_achievements_of_task res.data: \", res.data)\n     dispatch({\n         type: actionTypes.GET_ACHIEVEMENTS_OF_TASK,\n         payload: res.data\n     })\n}\n\nexport const get_achievements_of_goal = goal_id => async dispatch => {\n    const res = await axios.get(`/api/v1/achievements/goal/${goal_id}/`)\n    console.log(\"[DEBUG] get_achievements_of_goal res.data: \", res.data)\n    dispatch({\n        type: actionTypes.GET_ACHIEVEMENTS_OF_GOAL,\n        payload: res.data\n    })\n}\n\nexport const add_achievement = (formValues, file) => async dispatch => {\n    const s3prefix = 'https://goalingball-test.s3.amazonaws.com/'\n    if (file) {\n        const res = await axios.get('/api/v1/uploads/')\n        const response = await axios.put(res.data.url, file, {\n            headers: {\n                'Content-Type': 'image/jpeg' \n            }\n        })\n        const imageUrl = s3prefix + res.data.key\n        formValues.set('photo', imageUrl)\n    } \n\n    const res = await axios.post('/api/v1/achievements/', formValues, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    })\n    dispatch({\n        type: actionTypes.ADD_ACHIEVEMENT,\n        payload: res.data\n    })\n    history.push('/main')\n}\n\nexport const edit_achievement = (achievement_id, data, file, key) => async dispatch => {\n    if (file) { // edit a photo or create a new one\n        const s3prefix = 'https://goalingball-test.s3.amazonaws.com/'\n        // no photo has been set yet\n        if (!key) { \n            const res = await axios.get('/api/v1/uploads/')\n            key = res.data.key\n        }\n        const res = await axios.put('/api/v1/uploads/', { key })\n\n        await axios.put(res.data.url, file, {\n            headers: {\n                'Content-Type': 'image/jpeg' \n            }\n        })\n        \n        const imageUrl = s3prefix + res.data.key\n        data['photo'] = imageUrl\n    } \n    else {\n        if (key) {  // delete a photo\n            // TODO\n            // make another axios call\n        }\n    }\n    // else: no editing or creating a photo\n    \n    const res = await axios.put(`/api/v1/achievements/${achievement_id}/`, data, {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    console.log('edit achievement res.data: ', res.data)\n    dispatch({\n        type: actionTypes.EDIT_ACHIEVEMENT,\n        payload: res.data\n    })\n    const task_id = res.data.task\n    dispatch(get_achievements_of_task(task_id))\n    history.push('/main')\n}\n\n// Is it allowed to delete an existing achievement?\nexport const delete_achievement = achievement_id => async dispatch => {\n    const res = await axios.delete(`/api/v1/achievements/${achievement_id}/`)\n    if (res.status == 200) {\n        dispatch({\n            type: actionTypes.DELETE_ACHIEVEMENT,\n            payload: achievement_id\n        })\n        // TODO: DELETE_ACHIEVEMENT_FROM_TASK\n    }\n    else {\n        console.log(\"Fail to delete an achievement with id \", achievement_id)\n    }\n}","import * as actionTypes from './types'\nimport axios from 'axios'\n\nexport const explore_getAllGoal_ = (goals) => {\n    console.log(\"explore_getAllGoal_ goals: \", goals)\n    return { type: actionTypes.EXPLORE_GET_ALL_GOAL, goals: goals.slice(1, goals.length) } // remove ML status info from response\n}\n\nexport const explore_getAllGoal = () => {\n    return dispatch => {\n        return axios.get('/api/v1/explore/recommend/')\n        .then(res => dispatch(explore_getAllGoal_(res.data)))\n    }\n}\n\nexport const explore_getGoal_ = (goal) => {\n    return { type: actionTypes.EXPLORE_GET_GOAL, target: goal }\n}\n\nexport const explore_getGoal = (id) => {\n    return dispatch => {\n        return axios.get('/api/v1/explore/recommend/' + id + '/')\n        .then(res => {\n            dispatch(explore_getGoal_(res.data))\n        })\n    }\n}\n\nexport const explore_get_ach_by_goal = (id) => {\n    return dispatch => {\n        return axios.get('/api/v1/explore/recommend/ach/' + id + '/')\n        .then(res => {\n            dispatch(explore_get_ach_by_goal_(res.data))\n        })\n    }\n}\n\nexport const explore_get_ach_by_goal_ = (achievements) => {\n    return { type: actionTypes.EXPLORE_GET_ACH_BY_GOAL, achievements: achievements }\n}","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Menu } from 'semantic-ui-react'\nimport { Form, Button, Segment } from 'semantic-ui-react'\nimport './AuthForm.css'\nimport * as actionCreators from '../../../store/actions'\nimport { useDispatch } from 'react-redux'\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         onSignup: ()\n//     }\n// }\n\n/*\nWARNING: the order of declarations of React hooks in CreateSignupForm and CreateLoginForm should be consistent\nFor example, if useDispatch() is declared at the top CreateSignupForm, the same must be true in CreateLoginForm\nRemember that orders matter in React Hooks\n*/ \n\nexport const CreateSignupForm = () => {\n    const dispatch = useDispatch()\n\n    const { register, handleSubmit, watch, errors, reset } = useForm()\n    \n    const onSubmit = (data) => { // e: event\n        console.log(\"[DEBUG] signup form data: \", data)\n        if (data.password1 !== data.password2) {\n            // error\n        }\n        let dataToForm = new FormData()\n        dataToForm.append(\"username\", data.username)\n        dataToForm.append(\"password\", data.password1)\n        dispatch(actionCreators.signupUser(dataToForm))\n        reset()\n    }\n \n\n    const onError = (errors, e) => console.log(\"ERROR\", errors);\n\n    watch() // watchAllFields\n\n    return (\n        <Form className=\"signupForm\" onSubmit={handleSubmit(onSubmit, onError)}>\n        {/* <form onSubmit={handleSubmit(onSubmit, onError)}> */}\n        <Segment className=\"signupSegment\">\n            <label htmlFor=\"email\">email</label>\n            <input \n                id=\"email\" \n                name=\"email\" \n                placeholder=\"Enter email\" \n                ref={register({ \n                    required: true,\n                    // pattern: {\n                    //     value: /S+@S+.S+/,\n                    //     message: \"Entered value does not match email format\"\n                    // }\n                })} \n            />\n            {errors.email && <span role=\"alert\">{errors.email.message}</span>}\n            \n            <label htmlFor=\"username\">username</label>\n            <input \n                id=\"username\" \n                name=\"username\" \n                placeholder=\"Enter username\" \n                ref={register({\n                    required: true,\n                    minLength: {\n                        value: 5,\n                        message: \"min length is 5\"\n                    }\n                })} \n            />\n            {errors.username && <span>This field is required</span>}\n            \n            <label htmlFor=\"password1\">password</label>\n            <input id=\"password1\" name=\"password1\" placeholder=\"Enter password\" ref={register({ required: true })} />\n            {errors.password1 && <span role=\"alert\">{errors.password1.message}</span>}\n            \n            <label htmlFor=\"password2\"> Confirm password</label>\n            <input id=\"password2\" name=\"password2\" placeholder=\"Confirm password\" ref={register({ required: true })} />\n            {errors.password2 && <span>This field is required</span>}\n            </Segment>\n            <Button type=\"submit\" className=\"submitButton\">Sign Up</Button>\n        {/* </form> */}\n        </Form>\n    )\n    \n}\n\n\nexport const CreateLoginForm = () => {\n    const dispatch = useDispatch()\n    const { register, handleSubmit, watch, errors } = useForm()\n    // const onSubmit = data => console.log(data)\n    \n    const onSubmit =(data, e) => { // e: event\n        // console.log(\"[DEBUG] createLoginForm onSubmit data: \", data)\n        // dispatch(actionCreators.loginUser(data))\n        let dataToForm = new FormData()\n        dataToForm.append(\"username\", data.username)\n        dataToForm.append(\"password\", data.password)\n        dispatch(actionCreators.loginUser(dataToForm))\n        // console.log(\"[DEBUG] createLoginForm onSubmit data: \", data)\n        // console.log(\"[DEBUG] createLoginForm onSubmit dataToForm: \", dataToForm)\n    }\n\n    const onError = (errors, e) => console.log(errors, e);\n    watch() // watchAllFields\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit, onError)}>\n         <Segment className=\"LoginSegment\">\n            <label htmlFor=\"username\">username</label>\n            <input \n                id=\"username\" \n                name=\"username\" \n                placeholder=\"Enter username\" \n                ref={register({\n                    required: true,\n                    minLength: {\n                        value: 5,\n                        message: \"min length is 5\"\n                    }\n                })} \n            />\n            {errors.username && <span>This field is required</span>}\n\n                <label htmlFor=\"password\">password</label>\n                <input id=\"password\" name=\"password\" type=\"password\" placeholder=\"Enter password\" ref={register({ required: true })} />\n                {errors.password && <span role=\"alert\">{errors.password.message}</span>}\n            </Segment>\n            <Button type=\"submit\" className=\"submitButtonLogin\">Login</Button>\n        </Form>\n    )\n}\n\n\n","import React from 'react'\nimport ReactModal from 'react-modal'\nimport { useDispatch } from 'react-redux'\n\nimport { closeModal } from '../../../store/actions'\nimport {Button} from 'semantic-ui-react'\nimport './Modal.css'\n\nexport const Modal = (props) => {\n    if (process.env.NODE_ENV !== 'test') {ReactModal.setAppElement('#root')}\n\n    const { children } = props\n\n    const dispatch = useDispatch()\n\n    return (\n        <ReactModal id=\"reactModal\"\n            {...props}\n            style={{\n                overlay: {\n                  position: 'fixed',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  backgroundColor: 'rgba(230, 230, 230, 0.5)'\n                }}}\n        >\n            {children}\n            <Button\n                className=\"modal__close-btn\"\n                onClick={() => dispatch(closeModal())}\n                floated=\"right\"\n                id=\"closeButton\"\n            >\n                close\n            </Button>\n        </ReactModal>\n    )\n}\n\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { CreateSignupForm, CreateLoginForm } from './AuthForm'\nimport { Modal } from '../common/Modal/Modal'\nimport { Segment, Button, ButtonGroup } from 'semantic-ui-react'\nimport './Auth.css'\n\nconst Auth = (props) => {\n    // useSelector is equivalent to mapStateToProps\n    const isAuthModalOpen = useSelector(state => state.modal.authModal)\n    // useState is equivalent to this.state\n    const [authMode, setAuthMode] = useState(props.authMode)\n    \n    const form = authMode === 'signup' \n        ? CreateSignupForm()\n        : CreateLoginForm()\n    \n    return (\n        <Segment className=\"SegmentModal\">\n        <Modal isOpen={isAuthModalOpen}>\n            <div className=\"modal-container small-container modal-auth\" id=\"Auth\">\n                <ButtonGroup className=\"ButtonGroupModal\" floated=\"right\">\n                <Button onClick={() => setAuthMode('signup')} id=\"AuthSignup\">Sign Up</Button>\n                <Button onClick={() => setAuthMode('login')} id=\"AuthLogin\">Log In</Button>\n                </ButtonGroup>\n                {/* <div>{authMode == AuthMode.signup ? 'Sign Up' : 'Log In'}</div> */}\n                <br></br>\n                <div className=\"modal__body\">\n                   {form}\n                </div>\n            </div>\n        </Modal>\n        </Segment>\n    )\n}\n\nexport default Auth","import React from 'react'\nimport { connect } from 'react-redux'\nimport './login.css'\nimport Auth from '../../components/Auth/Auth'\nimport { openAuthModal } from '../../store/actions'\nimport history from '../../history'\nimport { Segment, Menu, Grid, Container, Form, Button, ButtonGroup} from 'semantic-ui-react'\n\nclass HomePage extends React.Component {\n\n    state = {\n        authMode: 'signup'\n    }\n\n    onClickSignup = () => {\n        this.setState({ authMode: 'signup' })\n        this.props.openAuthModal()\n    }\n\n    onClickLogin = () => {\n        this.setState({ authMode: 'login' })\n        this.props.openAuthModal()\n    }\n    \n    render() {\n        if (this.props.isUserLoggedIn) {\n            // Redirect to main page\n            history.push('/main')\n            return <div>Should redirect to main page</div>\n        }\n\n        return (\n            <Form center={'true'} aligned={'true'} className=\"FormLogin\">\n            <Segment className=\"Segment\">\n                <Grid columns={2} className=\"grid\" divided='vertically' style={\n                    {marginLeft: '10px'}\n                }>\n                <Grid.Column>\n                <h2 className=\"title\">Goaling Ball</h2>\n                <h3 className=\"subtitle\" style={\n                    {\n                        fontSize: '17px'\n                    }\n                }>Your goal management service.</h3>\n                </Grid.Column>\n                <Grid.Column>\n                <ButtonGroup className=\"ButtonGroup\">\n                <Button onClick={this.onClickSignup} className=\"Button\" id=\"ButtonSignup\">SIGN UP</Button >\n                {/* <Button.Or /> */}\n                <Button onClick={this.onClickLogin} className=\"Button\" id=\"ButtonLogin\">LOGIN</Button>\n                </ButtonGroup>\n                </Grid.Column>\n                </Grid>\n                {this.props.isAuthModalOpen && <Auth authMode={this.state.authMode} />}\n                {console.log(\"DEBUG: \", this.props.isAuthModalOpen)}\n            </Segment>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserLoggedIn: state.auth, \n        isAuthModalOpen: state.modal.authModal \n    }\n}\n\nexport default connect(mapStateToProps, { openAuthModal })(HomePage)","import React from 'react'\nimport { useSelector } from 'react-redux'\n// import {withRouter} from 'react-router'\nimport \"./MenuBar.css\"\nimport * as actionCreators from '../../store/actions/index'\nimport { useDispatch } from 'react-redux'\nimport { Icon, Sidebar, Menu, Grid } from 'semantic-ui-react'\nimport history from '../../history'\n\nconst MenuBarComponent = (props) => {\n\n    const auth = useSelector(state => state.auth)\n    const dispatch = useDispatch()\n\n    const onClickLogout = () => {\n        dispatch(actionCreators.logoutUser())\n        history.push('/')\n    }\n\n    // if (!auth) {\n    //     props.history.push('/')\n    // }\n\n    return (\n        <Sidebar className=\"Sidebar\"\n        animation='uncover'\n        vertical\n        visible=\"true\"\n        // width='very thin'\n        >   \n        <Grid verticalAlign='middle' rows={5} centered className=\"gridBar\">\n        <Grid.Row>\n            <Menu.Item as='a' >\n                <button class='ui basic button' onClick={()=> {history.push('/create')}} className='button-create' id=\"CreateButton\">\n                    <Icon name='plus circle' size='large' id='icon'></Icon>\n                    <br></br>\n                    Create\n                </button>\n            </Menu.Item>\n            </Grid.Row>\n\n            <Grid.Row>\n            <Menu.Item as='a'>\n                <button class='ui basic button' onClick={()=>history.push('/main')} className='button' id=\"MainButton\">\n                    <Icon name='home' size='large' id='icon'></Icon>\n                    <br></br>\n                    Main\n                </button>\n            </Menu.Item>\n            </Grid.Row>\n\n            <Grid.Row>\n            <Menu.Item as='a'>\n                <button class='ui basic button' onClick={()=>history.push('/dashboard')} className='button' id=\"DashButton\">\n                    <Icon name='chart bar outline' size='large' id='icon'></Icon>\n                    <br></br>\n                    Dashboard\n                </button>\n            </Menu.Item>\n            </Grid.Row>\n            <Grid.Row>\n            <Menu.Item as='a'>\n                <button class='ui basic button' onClick={()=>history.push('/explore')} className='button' id=\"ExpButton\">\n                    <Icon name='search' size='large' id='icon'></Icon>\n                    <br></br>\n                    Explore\n                </button>\n            </Menu.Item>\n            </Grid.Row>\n            {/* <Grid.Row>\n            <Menu.Item as='a'>\n                <button class='ui basic button' onClick={()=>props.history.push('/profile')} className='button' id=\"ProfileButton\">\n                    <Icon name='user circle' size='large' id='icon'></Icon>\n                    <br></br>\n                    Profile\n                </button>\n            </Menu.Item>\n            </Grid.Row> */}\n            <Grid.Row>\n            <Menu.Item as='a'>\n                <button class='ui basic button' onClick={()=>onClickLogout()} className='button-logout' id=\"LogoutButton\">\n                    <Icon name='arrow alternate circle right outline' size='large' id='icon'></Icon>\n                    <br></br>\n                    Logout\n                </button>\n            </Menu.Item>\n            </Grid.Row>\n        </Grid>\n        </Sidebar>\n    )\n}\n\n\n\nexport default MenuBarComponent","import React, { useState, Component } from 'react';\nimport Calendar from 'react-calendar'\nimport \"./CalendarPanel.css\"\nimport moment from 'moment'\n\nimport { Icon, Sidebar, Menu, List } from 'semantic-ui-react'\n\n\nclass CalendarPanelComponent extends Component {\n    state = {\n      date: new Date(),\n    }\n   \n    onChange = date => {\n        this.setState({ date })\n        console.log(\"DEBUG on Calendar\",moment(date).endOf(\"day\"))\n        this.props.onSubmit(date)\n    }\n    \n    render() {\n\n      const goalTitleList = this.props.goalList.map(g => {return(<List.Item>\n        <List.Content>\n          <List.Header as='a'>g.title</List.Header>\n      </List.Content>\n      </List.Item>)})\n      return (\n        <nav class='panel' className=\"CalendarPanel\">\n          <Calendar id=\"Calendar\"\n            onChange={this.onChange}\n            value={this.state.date}\n          />\n          <List divided relaxed bulleted>\n            {goalTitleList}\n          </List>\n        </nav>\n      );\n    }\n  }\n\nexport default CalendarPanelComponent","import React, { Component, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { Form , Button, Input, Icon, Progress, Segment, FormField, Dropdown, label, Grid, Container, GridColumn} from 'semantic-ui-react'\nimport Slider from \"@material-ui/core/Slider\"\nimport './AddAccForm.css'\nimport { add_achievement, edit_achievement } from '../../store/actions';\nimport LoadingOverlay from 'react-loading-overlay';\n\nclass AddAccForm extends Component {\n\n    state = {\n        achievement: this.props.achievement,\n        isEdit: this.props.achievement ? true : false,\n        isCreating: false,\n        percentage_complete: this.props.achievement ? this.props.achievement.percentage_complete : 0,\n        today: (this.props.today == undefined) ? null : moment(this.props.today).startOf('day').unix() + (24*60*60) - 1,\n        file: null,\n        fileName: \"\",\n        photo: this.props.achievement ? this.props.achievement.photo :\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/480px-No_image_available.svg.png',\n        description: this.props.achievement ? this.props.achievement.description : \"\"\n    }\n\n    // DiscreteSlider = () => {\n    //     // const classes = useStyles()  \n    //     return (\n    //       <div className=\"slider\">\n    //         <h5>\n    //             How much percentage did you do?\n    //         </h5>\n    //         <Slider\n    //           defaultValue={80}\n    //           getAriaValueText={this.valuetext}\n    //           aria-labelledby=\"discrete-slider-always\"\n    //           step={10}\n    //           // marks={marks}\n    //           valueLabelDisplay=\"on\"\n    //         />\n    //       </div>\n    //     )\n    //   }\n\n    fileChange = e => {\n        if(e.target.files){\n            this.setState(\n                { file: e.target.files[0], fileName: e.target.files[0].name,},\n                () => { console.log( \"File chosen --->\", this.state.file, console.log(\"File name  --->\", this.state.fileName))},\n            )\n            // console.log(\"AddAccForm this.state.file: \", this.state.file)\n            \n            this.setState({ photo:  URL.createObjectURL(e.target.files[0])});\n            // let reader = new FileReader()\n            // // set a callback function\n            // reader.onloadend = () => {\n            //     console.log(\"reader.result: \", reader.result)\n            //     this.setState({ photo: reader.result });\n            // }\n            // reader.readAsDataURL(e.target.files[0])\n            // console.log(this.state.photo) // caution: do not accept heic files\n        }  \n    }\n\n    fileRender() {\n        return(\n            <Segment>\n                <Grid columns='2' divided>\n                    <GridColumn width='5'>\n                        <h5>See Photo Preview</h5>\n                    </GridColumn>\n                    <GridColumn width='10'>\n                    <img id=\"image\" src={this.state.photo} className=\"AccPreviewImage\"></img>\n                    </GridColumn>\n                </Grid>\n                {/* <AccPhotoPreview url={imageUrl}></AccPhotoPreview> */}\n            </Segment>\n        )\n    }\n\n   renderPhoto() {\n        return (\n            <Segment className=\"AddAccPhoto\">\n            <Form.Field>\n                <label id=\"PhotoInput\">{this.state.isEdit ? \"Edit \" : \"Add \"} Achievement Photo</label>\n            <Button as=\"label\" htmlFor=\"file\" type=\"button\" animated=\"fade\">\n              <Button.Content visible>\n                <Icon name=\"file\" />\n              </Button.Content>\n              <Button.Content hidden>Choose a File</Button.Content>\n            </Button>\n            <input type=\"file\" id=\"file\" className=\"AccPhoto\" hidden onChange={this.fileChange}/>\n            <Form.Input fluid label=\"Photo Chosen \" placeholder=\"Use the above bar to browse your file system\" readOnly\n              value={this.state.fileName}\n            />\n            <Button style={{ marginTop: \"7px\" }} onClick={this.fileChange} id=\"UploadPhotoButton\"> See Preview </Button>\n          </Form.Field>\n          </Segment>\n        )\n    }\n\n    renderDescription() {\n        return (\n            <Form.Field className=\"AddAccDes\">\n                <label>Description</label>\n                <Input \n                    fluid\n                    placeholder='Write a description about your acheivement'\n                    value={this.state.description}\n                    onChange={e => this.setState({description: e.target.value})}\n                />\n            </Form.Field>\n        )\n    }\n\n    closeHandler = () => {\n        this.props.onSubmit()\n    }\n\n    onPercentageCompleteChange = (event, newValue) => {\n      this.setState({percentage_complete: newValue})  \n    //   console.log(this.state.percentage_complete)\n    }\n\n    handleSubmit = async () => {\n        this.setState({ isCreating: true })\n        if (this.state.isEdit) {\n            const id = this.props.achievement.id\n            const key = this.props.achievement.photo\n            const data = {\n                // task_id: this.props.task_id,\n                percentage_complete: this.state.percentage_complete,\n                written_at: this.state.today,\n                description: this.state.description,\n                photo: this.state.photo\n            }\n            await this.props.edit_achievement(id, data, this.state.file, key)\n        } \n        else {\n            let form = new FormData()\n            // console.log(\"DEBUG Ach form: sending percentage_complete\", this.state.percentage_complete)\n            form.append(\"task_id\", this.props.task_id)\n            form.append(\"percentage_complete\", this.state.percentage_complete)\n            form.append(\"written_at\", this.state.today)\n            form.append(\"description\", this.state.description)\n            // form.append(\"photo\", this.state.photo)\n            await this.props.add_achievement(form, this.state.file)    \n        }\n        this.props.onSubmit(false)\n\n    }\n\n    render(){\n        // console.log(\"this.props.achievement: \", this.props.achievement)\n        return(\n        <LoadingOverlay\n            className=\"AddAccForm\"\n            active={this.state.isCreating}\n            spinner\n            text={this.state.isEdit ? \"Edit \" : \"Add \" + \"ing your achivement...\"}\n            >\n            <Form>\n                {/* {console.log(\"DEBUG ADD Ac\", this.props)} */}\n                <Segment className=\"AddAccForm\" id=\"AddAccFormSegment\"\n                style={\n                    {boxShadow: \"none\", border: \"none\"}\n                    }>\n                <h3>&nbsp; {this.state.isEdit ? \"Edit \" : \"Add \"} Achievements</h3>\n\n                {/* Add slider to record done_percentage */}            \n                <Form.Group>\n                    <div>\n                    <Grid columns='2' className=\"SliderRoot\">\n                        <GridColumn width={6}>\n                        <h4 className=\"SliderRootTitle\">\n                            How much did you do?\n                        </h4>\n                        </GridColumn>\n                        <GridColumn width={8}>\n                            <Slider\n                            defaultValue={this.state.percentage_complete}\n                            aria-labelledby=\"discrete-slider-always\"\n                            step={10}\n                            onChange={this.onPercentageCompleteChange}\n                            // marks={marks}\n                            valueLabelDisplay=\"on\"\n                            />\n                        </GridColumn>\n                    </Grid>\n                    </div>\n                    </Form.Group>\n                        {/* Upload and preview photo*/}\n                        <div>\n                            <Grid columns='2'>\n                                <GridColumn className=\"AccPhotoForm\" width={6}>\n                                {this.renderPhoto()}\n                                </GridColumn>\n                                <GridColumn width={8}>\n                                {this.fileRender()}\n                                </GridColumn>\n                            </Grid>\n                        </div>\n                        {this.renderDescription()}\n                        <Button.Group>\n                            <Form.Button className=\"AddAccSubmitButton\" onClick={this.handleSubmit}>Submit</Form.Button>\n                            <Form.Button className=\"AddAccCloseButton\" onClick={this.closeHandler}>Close</Form.Button>                           \n                        </Button.Group>\n                </Segment>\n            </Form>\n            </LoadingOverlay>\n        )\n    }\n\n}\n\nexport default connect(null, { add_achievement, edit_achievement })(AddAccForm)\n","import React, {Component} from 'react'\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Container} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport Axios from 'axios'\nimport moment from 'moment'\nimport history from '../../history'\nimport './AccSegment.css'\nimport { VictoryPie, VictoryTheme, VictoryLabel } from 'victory'\nimport SVG from 'react-inlinesvg'\nimport Rating from '@material-ui/lab/Rating'\nimport { openAddAccModal } from '../../store/actions/index'\nimport AddAccForm from '../AddAcc/AddAccForm'\n\nclass AccSegment extends Component {\n\n    state = {\n        addAccopen: false,\n        achievement: null\n    }\n\n    onClickEditAchievement = achievement => {\n        this.setState({ addAccopen : true, achievement })\n    }\n\n    onClickAddAccHandler = () => {\n        this.setState({ addAccopen : true })\n    }\n\n    renderTotal = () => {\n        let achievement = null\n        // this.props.today is a Date object\n        const today_ts = moment(this.props.today).startOf('day').unix() + (24*60*60) -1\n        const achievement_selected = this.props.achievements.filter(a => ( a.written_at == today_ts ) && (a.task == this.props.task.id) )\n        if (achievement_selected.length > 0) {\n            achievement = achievement_selected[0]\n        }\n\n        if (achievement) {\n            console.log(\"udpaet this.set.achievement\")\n            const metric = achievement.percentage_complete\n            return(\n                <Segment className=\"AccContainer\" >\n                    <h4>Your accomplishment of {this.props.task.title}:</h4>\n                    <Grid columns=\"2\" >\n                        <Grid.Column width={2}className=\"importance\">\n                            <p>Importance</p>\n                        </Grid.Column>\n                        <Grid.Column className=\"ImportanceRating\">\n                            <Rating\n                                name=\"simple-controlled\"\n                                size=\"small\"\n                                value={this.props.task.importance}\n                                readOnly\n                            />\n                        </Grid.Column>\n                    </Grid>\n                    <Grid columns='2'className=\"AccGrid\" divided>\n                        <Grid.Column width={6} className=\"AccContainerPercentage\">\n                            {/* \"percentage\" */}\n                            <svg viewBox=\"0 0 520 520\">\n                                <VictoryPie\n                                    standalone={false}\n                                    labelComponent={<span/>}\n                                    width={520} height={520}\n                                    data={[{'key': \"\", 'y': metric}, {'key': \"\", 'y': (100-metric)} ]}\n                                    innerRadius={166}\n                                    colorScale={[\"#19B3A6\", \"#EEEEEE\" ]}\n                                    // style={{ labels: { fontSize: 20, fill: \"white\" } }}\n                                />\n                                <VictoryLabel\n                                    textAnchor=\"middle\"\n                                    style={{ fontSize: 50 }}\n                                    x={260} y={260}\n                                    text={metric + \"%\"}\n                                />\n                            </svg>\n                            <p className=\"AccChartTitle\">percentage done</p>\n                        </Grid.Column>\n                        <Grid.Column width={9} className=\"AccContainerDetail\">\n                            {/* <AccCard/> */}\n                            <Grid columns='2'>\n                                <Grid.Column width='5'>\n                                    <h5>See Photo Preview</h5>\n                                </Grid.Column>\n                                <Grid.Column width='10'>\n                                <img id=\"image\" src={achievement.photo} className=\"AccPreviewImage\"></img>\n                                </Grid.Column>\n                            </Grid>\n                        </Grid.Column>\n                        {/* <p>\"Example Description\"</p> */}\n                    </Grid>\n                    <br></br>\n                    <div className=\"description\">\n                        <Icon name='pencil alternate' style={{color: '#5F5F5F'}}/>{achievement.description}\n                        {/* <p>Example Description</p> */}\n                    </div>\n                    <div className=\"description\">\n                        <Button floated='right' size=\"tiny\" onClick={() => this.onClickEditAchievement(achievement)} id=\"EditAchButton\">Edit</Button>\n                        <br></br>\n                        <br></br>\n                    </div>\n                </Segment>\n            ) \n        }\n        else {\n            // console.log(this.props.achievements)\n            return(\n                <Segment className=\"DefaultAchSegment\">\n                    <h4>No achievements yet. Add one if you're done!</h4>\n                    {(!this.state.addAccopen) && <Button onClick={this.onClickAddAccHandler} className=\"DefaultAchAddButton\">Add an Achievement</Button>}\n                    {/* {this.state.addAccopen && <AddAccForm onSubmit={this.onCloseSubmit} today={this.props.today} task_id={this.props.task.id}/>} */}\n                </Segment>\n            )\n        }\n    }\n    \n    onCloseSubmit = () => {\n        this.setState({addAccopen: false})\n    }\n\n    onSetAccSubmit = (ach) => {\n        this.setState({achievement: ach})\n    }\n\n    render() {\n        return(\n            <>\n                {this.state.addAccopen ? \n                    <AddAccForm \n                        today={this.props.today} \n                        task_id={this.props.task.id} \n                        onSubmit={this.onCloseSubmit}\n                        achievement={this.state.achievement}\n                    /> \n                    : this.renderTotal()\n                }\n            </>\n        )\n    }\n}\n\n\n\nexport default AccSegment\n\n","import React, {Component} from 'react'\nimport { List, Icon, Checkbox, Grid, Button, Segment} from 'semantic-ui-react'\nimport './TaskBar.css'\nimport AccSegment from '../AccDetail/AccSegmentComponent'\nimport { deleteTask, get_achievements_of_task } from '../../store/actions/index'\nimport { connect } from 'react-redux'\n\nclass TaskBarComponent extends Component {\n\n    state = {\n        acc_open: false,\n        accomplishment: null,\n        addAccopen: false,\n        achievement: {des: \"des\", percentage_done: 0}\n    }\n\n    // componentDidMount = () => {\n    //     console.log(\"TODAY in taskbar\" ,this.props.today)\n    // }\n\n    //need to fetch accomplishments from a selected task\n    //select the accomplishment with the same date\n\n    deleteTaskHandler = () => {\n        console.log(\"DEBUG date send\", this.props.goal, this.props.task.id)\n        this.props.deleteTask(this.props.goal, this.props.task.id)\n    }\n\n    to_weekdays = (num) => {\n        switch(num){\n            case(\"MONDAY\"):\n                return \"Mon\"\n            case(\"TUESDAY\"):\n                return \"Tue\"\n            case(\"WEDNESDAY\"):\n                return \"Wed\"\n            case(\"THURSDAY\"):\n                return \"Thu\"\n            case(\"FRIDAY\"):\n                return \"Fri\"\n            case(\"SATURDAY\"):\n                return \"Sat\"\n            case(\"SUNDAY\"):\n                return \"Sun\"\n        }\n    }\n\n    toRecString(daylist) {\n        let str = \"\"\n        const d_str = daylist.map(d => this.to_weekdays(d))\n        for (var d of d_str) {\n            str = str + d + \", \" \n        }\n        return str.substring(0, (str.length)-2)\n    }\n\n    isRecurrent(daylist) {\n        // console.log(\"[DEBUG] TaskBarComponent isRecurrent daylist: \", daylist)\n        if(daylist.length == 0) {\n            return(\n                <Button.Group size=\"tiny\" floated=\"right\">\n                <Button icon className=\"TaskBarButton\" onClick={this.deleteTaskHandler}>\n                    <Icon name='x' />\n                </Button>\n                </Button.Group>\n            )\n        }\n        else {\n            return (\n                <Button.Group size=\"tiny\" floated=\"right\" id=\"Recurrent\">\n                    <Button icon className=\"TaskBarButton\">\n                    <Icon name='redo' />\n                </Button>\n                <Button icon className=\"TaskBarButton\" id=\"X\" onClick={this.deleteTaskHandler}>\n                    <Icon name='x' />\n                </Button>\n                </Button.Group>\n          )\n        }\n    }\n\n    accOpenHandler = async () => {\n        if(this.state.acc_open == false) {\n            await this.props.get_achievements_of_task(this.props.task.id)\n            // console.log(\"ACHIEVEMENTS\", this.props.achievements)\n            this.setState({acc_open: true})\n        }\n        else{\n            this.setState({acc_open: false})\n        }\n    }\n\n    render() {\n        const { title, id, deadline, day_of_week } = this.props.task\n        console.log(\"[DEBUG] TaskBarComponent is rendering. task: \", this.props.task)\n        return(\n        <> \n            <List.Item className=\"TaskBarListItem\">\n                <List.Content floated='right'>\n                    {this.isRecurrent(day_of_week)}\n                </List.Content>\n                {/* <Button icon className=\"TaskBarListTriangle\"><Icon name='right triangle'/></Button> */}\n                {/* <Icon className=\"TaskBarListTriangle\" name='right triangle'/> */}\n                <List.Content className=\"TaskBarListContent\">\n                    <Button icon className=\"TaskBarListTriangle\" onClick={()=>this.accOpenHandler()}><Icon name='right triangle'/></Button>\n                        {title} \n                {/* <Button icon className=\"TaskBarListTriangle\" onClick={this.accOpenHandler}><Icon name='right triangle'/></Button>\n                    {title}  */}\n                </List.Content>\n                    {/* {this.state.acc_open && <p>\"Show Accomplishment\"</p>} */}\n            </List.Item>\n            {this.state.acc_open && <AccSegment task={this.props.task} today={this.props.today} achievements={this.props.achievements}/>}\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        achievements: Object.values(state.achievement),\n    }\n}\n\nexport default connect(mapStateToProps, { deleteTask, get_achievements_of_task }) (TaskBarComponent)","import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { Grid, Menu } from 'semantic-ui-react'\nimport { Form, Button, Segment } from 'semantic-ui-react'\nimport * as actionCreators from '../../../store/actions'\nimport { useDispatch } from 'react-redux'\nimport './AddTaskForm.css'\nimport Rating from '@material-ui/lab/Rating';\nimport DatePicker from \"react-datepicker\"\nimport moment from 'moment'\nimport { DateInput} from 'semantic-ui-calendar-react'\n\nconst AddTaskForm = (props) => {\n    const { register, handleSubmit, watch, errors , reset} = useForm()\n    const dispatch = useDispatch()\n    const onSubmit = (data, e) => { // e: event\n        // const deadline_date = moment((deadline + ' '+ 'OO:OO:OO'), 'YYYY-MM-DD HH:MM:SS')     // as deadline is set as Form.Input instead of datepicker\n        // console.log(\"type of deadline\", deadline_date)\n        // console.log(title, day_of_week, deadline, importance)\n        // ts: timestamp\n        const deadline_in_ts = moment(deadline).startOf('day').unix() + (24*60*60 - 1)\n        const start_in_ts = moment(start_at).startOf('day').unix()\n        const dataForm = new FormData()\n        dataForm.append(\"title\", title)\n        dataForm.append(\"goal_id\", props.goal_id)\n        day_of_week.forEach(item => {\n            dataForm.append('day_of_week', item);\n           });\n        // dataForm.append(\"day_of_week\", day_of_week)  \n        dataForm.append('start_at', start_in_ts)      \n        dataForm.append(\"deadline\", deadline_in_ts)\n        dataForm.append(\"importance\", importance)\n        dispatch(actionCreators.addTask(dataForm))\n        reset()\n    }   \n\n    const onError = (errors, e) => console.log(errors, e);\n    watch() // watchAllFields\n\n    const options = [\n        { key: 'm', text: 'Monday', value: 'MONDAY' },\n        { key: 't', text: 'Tuesday', value: 'TUESDAY' },\n        { key: 'w', text: 'Wednesday', value: 'WEDNESDAY' },\n        { key: 'th', text: 'Thursday', value: 'THURSDAY' },\n        { key: 'f', text: 'Friday', value: 'FRIDAY' },\n        { key: 's', text: 'Saturday', value: 'SATURDAY' },\n        { key: 'su', text: 'Sunday', value: 'SUNDAY' },\n      ]\n    const [importance, setImportance] = React.useState(2)\n    const [day_of_week, setDayOfWeek] = React.useState([])\n    const [title, setTitle] = React.useState(\"\")\n    const [start_at, setStartAt] = React.useState(new Date)\n    const [deadline, setDeadline] = React.useState(new Date)\n    // const [deadlineString, setDeadlineString] = React.useState(\"\")\n\n    // const reg_deadline = new RegExp('^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$')\n\n    // const setDeadlineString = (string) => {\n    //     console.log(\"[DEBUG] dadline string: \", string)\n    //     const deadline = moment(string, 'YYYY-MM-DD').startOf('day').unix() + (24*60*60 - 1)\n    //     setDeadline(deadline)\n    // }\n\n    const handleChangeDeadline = (event, {name, value}) => {\n        if(moment(value).unix() > props.goal_deadline){\n            window.alert(\"task deadline cannot be later than goal deadline. Goal deadline will be set.\")\n            setDeadline(moment.unix(props.goal_deadline).format(\"YYYY-MM-DD\"))\n        }\n        else {\n            console.log(\"DEBUG in addtask:\", moment(value))\n            setDeadline(moment(value))\n        }\n      }\n\n    const handleChangeStart = (event, {name, value}) => {\n        console.log(moment(value))\n        console.log(props.goal_start_at)\n        if(moment(value).unix() < props.goal_start_at){\n            window.alert(\"task start date cannot be earlier than goal start date. Goal start date will be set.\")\n            // console.log(moment.unix(props.goal_deadline).format(\"YYYY-MM-DD\"))\n            setStartAt(moment.unix(props.goal_start_at).format(\"YYYY-MM-DD\"))\n            setDeadline(moment.unix(props.goal_start_at).format(\"YYYY-MM-DD\"))\n        }\n        else {\n            setStartAt(moment(value))\n            setDeadline(moment(value))\n        }\n     }\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit, onError)}>\n            <Segment className=\"AddTaskForm\" id=\"AddTaskFormSegment\">\n                <h3>&nbsp; Add Task</h3>\n                <Form.Group widths='equal'>\n                    <Form.Input label='Title' placeholder='Enter task title' onChange={(e,data)=> setTitle(data.value)} id=\"AddTaskFormTitle\"/>\n                    </Form.Group>\n                        <Form.Group>\n                            <Form.Select\n                                multiple selection\n                                label='Day of Week'\n                                id=\"AddTaskFormDayofWeek\"\n                                options={options}\n                                onChange={(e,data)=>setDayOfWeek(data.value)}\n                                placeholder='Day of Week'\n                            />\n                            <DateInput\n                                id=\"AddTaskFormStartAt\"\n                                label='Start at'\n                                name=\"start_at\"\n                                placeholder=\"Date\"\n                                value={moment(start_at).format('YYYY-MM-DD')}\n                                iconPosition=\"left\"\n                                dateFormat=\"YYYY-MM-DD\"\n                                onChange={handleChangeStart}\n                                // disabled={day_of_week.length == 0 ? true : false}\n                            /> \n                            <DateInput\n                                id=\"AddTaskFormDeadline\"\n                                label='Deadline'\n                                name=\"deadline\"\n                                placeholder=\"Date\"\n                                value={moment(deadline).format('YYYY-MM-DD')}\n                                iconPosition=\"left\"\n                                dateFormat=\"YYYY-MM-DD\"\n                                onChange={handleChangeDeadline}\n                                disabled={day_of_week.length == 0 ? true : false}\n                            />                 \n                            </Form.Group>\n                    <Form.Group inline>\n                    <label>Importance</label>\n                        <Rating\n                        name=\"simple-controlled\"\n                        size=\"large\"\n                        id=\"AddTaskFormImportance\"\n                        value={importance}\n                        onChange={(event, newValue) => {\n                            setImportance(newValue);\n                        }} \n                        />\n                    </Form.Group>\n                    <Form.Button className=\"AddTaskSubmitButton\">Submit</Form.Button>                    \n                </Segment>\n        </Form>\n    )\n}\n\nexport default AddTaskForm","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport './AddTaskModal.css'\nimport { Modal } from '../../common/Modal/Modal'\nimport { Segment, Button, ButtonGroup } from 'semantic-ui-react'\nimport AddTaskForm from './AddTaskForm'\n\nconst AddTaskModal = (props) => {\n    const isAddTaskModalOpen = useSelector(state => state.modal.addTask)\n    return (\n        <Segment className=\"SegmentAddTask\" id=\"SegmentAddTaskModal\">\n        <Modal isOpen={isAddTaskModalOpen} className=\"SegmentAddTask\">\n            <div className=\"modal-container small-container modal-addTask\">\n                <div className=\"modal__body\">\n                   <AddTaskForm goal_id={props.goal_id} goal_deadline={props.goal_deadline} goal_start_at={props.goal_start_at}/>\n                </div>\n            </div>\n        </Modal>\n        </Segment>\n    )\n}\n\nexport default AddTaskModal ","import React, {Component} from 'react'\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Container} from 'semantic-ui-react'\nimport './GoalBody.css'\nimport TaskBarComponent from '../TaskBar/TaskBarComponent'\nimport AddTaskModal from './AddTaskModal/AddTaskModal'\nimport { connect } from 'react-redux'\nimport Axios from 'axios'\nimport { deleteGoal, openAddTaskModal, getGoal, } from '../../store/actions/index'\nimport moment from 'moment'\nimport history from '../../history'\n\nclass GoalBodyComponent extends Component {\n    // props have goal id, title, deadline, and tags\n    // the tasks here are originally from backend\n    // TODO: connect with redux\n\n    state = {\n        tasks: this.props.goal.tasks,\n        selectedDate: null,\n        addTaskModal: false,\n        showAll:false,\n        // tasks: this.props.goal.tasks ? this.props.goal.tasks : []\n    }\n\n    // TODO: implement selectCertainTask function - select tasks depending on date & deadline & day of week - done\n    onClickEditGoalHandler = async () => {\n        // change \"selectedGoal\" in state.goals\n        // TODO: do we need to fetch it from backend? Why not just modify the store without accessing the backend?\n        await this.props.getGoal(this.props.goal.id)\n        history.push('/edit')\n    }\n\n    onClickDeleteHandler = () => {\n        let deleteGoal = window.confirm(\"Tasks and achievements of this goal will be lost. Are you sure?\")\n        if (deleteGoal) {\n          this.props.deleteGoal(this.props.goal.id)\n        }\n    }\n\n    onClickAddTaskHandler = () => {\n        this.setState({ addTaskModal : true})\n        this.props.openAddTaskModal()\n    }\n\n    // start_at is a timestamp\n    startAtDate = (start_at) => {\n        return moment.unix(start_at).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    // deadline is a timestamp\n    deadlineDate = (deadline) => {\n        return moment.unix(deadline).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    to_weekdays = (num) => {\n        switch(num){\n            case(1):\n                return \"MONDAY\"\n            case(2):\n                return \"TUESDAY\"\n            case(3):\n                return \"WEDNESDAY\"\n            case(4):\n                return \"THURSDAY\"\n            case(5):\n                return \"FRIDAY\"\n            case(6):\n                return \"SATURDAY\"\n            case(0):\n                return \"SUNDAY\"\n        }\n    }\n\n    render() {\n        console.log(\"GoalBodyComponent this.props.goal: \", this.props.goal)\n        const { title, id, deadline, start_at, tags, tasks } = this.props.goal\n        const today = moment(this.props.today).startOf('day').unix()\n        // console.log(today)\n\n        const filtered_tasks_date = tasks.reduce((pre, t)=> {\n            // today should be included in the range\n           if((t.start_at <= today) && (t.deadline >= today)) {\n               pre.push(t)\n           }\n           return pre\n        }, [])\n\n        const filtered_tasks = filtered_tasks_date.reduce((pre, t) => {\n            if(t.day_of_week.length == 0) {pre.push(t)}\n            else {\n                console.log(moment(this.props.today).weekday())\n                const weekday = this.to_weekdays(moment(this.props.today).weekday())\n                if(t.day_of_week.includes(weekday)) {\n                    pre.push(t)\n                }\n            }\n            return pre\n        }, [])\n\n        // console.log(tasks)\n        // console.log(filtered_tasks_date)\n        let toTaskBar = []\n        if(this.state.showAll) {\n            toTaskBar =  tasks.map(task => <TaskBarComponent task={task} key={task.id} goal={this.props.goal.id} today={this.props.today}/>)\n        }\n        else {\n            toTaskBar = filtered_tasks.map(task => <TaskBarComponent task={task} key={task.id} goal={this.props.goal.id} today={this.props.today}/>)\n        }\n        // let toTaskBar = []\n        // if((tasks !== undefined) && (tasks.length > 0)){toTaskBar = tasks.map(task => <TaskBarComponent task={task} key={task.id} />)}\n        \n        // console.log(\"[DEBUG] GoalBodyComponent is rendering. this.props.goal: \", this.props.goal)\n        // console.log(\"[DEBUG] GoalBodyComponent is rendering. tasks: \", tasks)\n\n    return(\n        <Segment className=\"GoalBodySegment\">\n            <List className=\"GoalBodyTitleList\">\n                <List.Item className=\"GoalBodyListItem\">\n                <Icon name='circle' className=\"GoalBodyListIcon\" size=\"small\"/>\n                    <List.Content className=\"GoalBodyListTitle\">\n                        <List.Header className=\"GoalBodyListTitleHeader\">\n                            {title}\n                            <Button \n                                floated=\"right\" \n                                size=\"tiny\"\n                                toggle active={this.state.showAll} \n                                onClick={()=>{this.setState({showAll: !(this.state.showAll)})}}\n                                id=\"showAllTaskButton\"\n                            >\n                                Show All Tasks\n                            </Button>\n                        </List.Header>\n                        {/* <List.Item className=\"GoalBodyListDeadline\">Until {this.deadlineDate(this.props.deadline)}</List.Item> */}\n                        <div className=\"GoalBodyListDeadline\">From {this.startAtDate(start_at)}, Until {this.deadlineDate(deadline)}</div>\n                    </List.Content>\n                </List.Item>\n            </List>\n            <List className=\"GoalBodyListwithTask\" celled>\n                {toTaskBar}\n            </List>\n            <List.Item>\n                    <Button.Group className=\"DeleteGoalButtonGroupAnother\" floated=\"left\">\n                        <Button icon id=\"EditButtonGoalBody\" onClick={()=>this.onClickEditGoalHandler()}\n                            style={\n                                {\n                                    backgroundColor: \"#ffffff\",\n                                    padding: '5px'\n                                }\n                            }>\n                            <Icon name='edit'/>\n                            </Button>\n                        <Button icon id=\"DeleteButtonGoalBody\" onClick={()=>this.onClickDeleteHandler()}\n                            style={\n                                {\n                                    backgroundColor: \"#ffffff\",\n                                    padding: '5px'\n                                }\n                            }>\n                            <Icon name='trash'/></Button>\n                    </Button.Group> \n                    <Button circular onClick={()=>this.onClickAddTaskHandler()} floated=\"right\" icon=\"add\" size=\"tiny\" className=\"GoalBodyAddButton\" id=\"AddButtonGoalBody\"></Button>\n            </List.Item>\n            {/* <Button circular floated=\"right\" icon=\"add\" size=\"mini\" className=\"GoalBodyAddButton\"></Button> */}\n            {(this.state.addTaskModal && this.props.isAddTaskModalOpen) && <AddTaskModal goal_id={id} goal_deadline={deadline} goal_start_at={start_at}/>}\n            <br></br>\n        </Segment>\n    )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state)\n    return {\n        isAddTaskModalOpen: state.modal.addTask\n    }\n}\n\nexport default connect(mapStateToProps, { openAddTaskModal, deleteGoal, getGoal }) (GoalBodyComponent)","import React, {Component} from 'react'\nimport MenuBar from '../../components/Menubar/MenuBarComponent'\nimport CalendarPanel from '../../components/CalendarPanel/CalendarPanelComponent'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Container } from 'semantic-ui-react';\nimport GoalBodyComponent from '../../components/GoalBody/GoalBodyComponent'\nimport './GoalListComponent.css'\nimport Axios from 'axios'\nimport * as actionCreators from '../../store/actions/'\nimport moment from 'moment'\n\n\nclass GoalList extends Component {\n\n    state = {\n        today: new Date()\n    }\n\n    componentDidMount(){\n        this.props.onGetAllGoals()\n    }\n\n    selectTodayGoals() {\n        const today = moment(this.state.today).unix()\n        console.log(\"selectTodayGoals this.props.goalList: \", this.props.goalList)\n        const todayGoals = this.props.goalList.filter(goal => (goal.start_at <= today && today <= goal.deadline))\n        return todayGoals\n    }\n \n    onDeadlineSubmit = (date) => {\n        this.setState({today: date})\n    }\n\n    render(){\n\n        //map sampleGoalList to goalBodyComponent\n        const todayGoalsList = this.selectTodayGoals()\n        \n        const toGoalBody = todayGoalsList.map(goal =>  <GoalBodyComponent goal={goal} key={goal.id} today={this.state.today}/>)\n        console.log(\"[DEBUG] GoalListComponent is rendering\")\n\n        return(\n            <div>\n                <div className='menubar'>\n                    {console.log(this.props)}\n                    <MenuBar/>\n                </div>\n                <div className='calendarpanel'>\n                    <CalendarPanel onSubmit={this.onDeadlineSubmit} goalList={todayGoalsList}/>\n                </div>\n                <div className='goallist'>\n                    <h2 className=\"componentTitle\">What's for today?</h2>\n                    {toGoalBody}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(\"goalList: \", state.goal.goals)\n    return {\n        goalList: state.goal.goals,\n        // taskList: state.task.tasks,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onGetAllGoals: () => dispatch(actionCreators.getAllGoal()),\n        // onGetAllTasks: () => dispatch(actionCreators.getAllTask())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GoalList)","import React, { Component, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\"\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport MenuBar from '../../../components/Menubar/MenuBarComponent'\nimport { withRouter } from 'react-router-dom'\nimport { Form , Button, Input, Icon, Progress, Segment, FormField, Dropdown, label, Grid, Container} from 'semantic-ui-react'\nimport './CreateGoal.css'\n\n// import \"react-datepicker/dist/react-datepicker.css\"\nimport * as actionCreators from '../../../store/actions'\nimport { addGoal } from '../../../store/actions'\nimport { DateInput} from 'semantic-ui-calendar-react'\n// import { isThisMonth } from 'date-fns/esm'\n\n\nclass CreateGoal extends Component {\n\n    state = {\n      title: \"\",\n      file: null,\n      fileName: \"\",\n      upload: false,\n      deadline: new Date(),\n      start_at: new Date(),\n      tags: [],\n      tagOptions:[],\n      isCreating: false,\n      preview: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/480px-No_image_available.svg.png'\n    }\n\n    fileChange = e => {\n        if(e.target.files){\n        this.setState(\n          { file: e.target.files[0], fileName: e.target.files[0].name, upload: true},\n          () => { console.log( \"File chosen --->\", this.state.file, console.log(\"File name  --->\", this.state.fileName))},\n          )\n          this.setState({ preview:  URL.createObjectURL( e.target.files[0])});\n        }\n        \n        else {\n        }\n        \n    }\n\n    renderTitle() {\n        return (\n            <Form.Field>\n                <label>Goal Title</label>\n                <Input placeholder='Enter Title Here' \n                className=\"CreateGoalTitle\"\n                onChange={(e)=>this.setState({title: e.target.value})}></Input>\n            </Form.Field>\n        )\n    }\n\n    renderPhoto() {\n        const { statusCode } = this.state;\n        return (\n            <Segment>\n                <Grid columns='2'>\n                    <Grid.Column width=\"11\">\n                        <Form.Field style={\n                            {\n                                marginTop: '20px'\n                            }\n                        }>\n                                <label id=\"PhotoInput\">Add Goal Photo</label>\n                            <Button as=\"label\" htmlFor=\"file\" type=\"button\" animated=\"fade\">\n                            <Button.Content visible>\n                                <Icon name=\"file\" />\n                            </Button.Content>\n                            <Button.Content hidden>Choose a File</Button.Content>\n                            </Button>\n                            <input type=\"file\" id=\"file\" className=\"GoalPhoto\" hidden onChange={this.fileChange}/>\n                            <Form.Input fluid label=\"Photo Chosen \" placeholder=\"Use the above bar to browse your file system\" readOnly\n                            value={this.state.fileName}\n                            />\n                            {/* <Button style={{ marginTop: \"7px\" }} onClick={this.fileChange} id=\"UploadPhotoButton\"> Upload </Button> */}\n                        </Form.Field>\n\n                    </Grid.Column>\n                    <Grid.Column width=\"5\">\n                    {this.fileRender()}\n                    </Grid.Column>\n                </Grid>\n          </Segment>\n        )\n    }\n\n    // selectDeadline(date) {\n    //     this.setState({deadline:date})\n    // }\n\n    // formatDate(d) {\n    //     // console.log(date.toString('MM/dd/yyyy'))\n    //     var curr_date = d.getDate();\n    //     var curr_month = d.getMonth() + 1; //Months are zero based\n    //     var curr_year = d.getFullYear();\n    //     return curr_month + \"/\" + curr_date + \"/\" + curr_year\n    // }\n\n    fileRender() {\n        return(\n\n                    <Segment style={\n                        {\n                            boxShadow: 'none',\n                            alignItems: 'center'\n                            \n                        }\n                    }\n                    textAlign='center'>\n                    <img id=\"image\" src={this.state.preview} style={\n                        {\n                            maxWidth: '150px', \n                            maxHeight: '180px',\n                            minWidth: '150px',\n                            minHeight: '150px',                      \n                        }\n                    }></img>\n                    </Segment>\n\n        )\n    }\n\n\n    handleChangeStart = (event, {name, value}) => {\n         this.setState({ [name]: value });\n      }\n\n    handleChangeDeadline = (event, {name, value}) => {\n        this.setState({ [name]: value });\n     }\n\n    renderDeadline() {\n        return(\n            <Segment>\n                <FormField>\n                    {/* <label>Select Goal Deadline</label> */}\n                    <Grid columns='two' textAlign='center' className=\"DeadlineGrid\">\n                    <Grid.Column width={5}>\n                    {/* <Input id=\"todayDate\" style={{ width: \"175px\" }} readOnly value={this.formatDate(this.state.startdate)}></Input> */}\n                    <DateInput\n                                id=\"GoalFormStart\"\n                                label='Starting From'\n                                name=\"start_at\"\n                                placeholder=\"Date\"\n                                value={moment(this.state.start_at).format('YYYY-MM-DD')}\n                                iconPosition=\"left\"\n                                dateFormat=\"YYYY-MM-DD\"\n                                onChange={this.handleChangeStart}\n                            />  \n                    </Grid.Column >\n                    {/* <Grid.Column width={1}><Container><h5>to</h5></Container></Grid.Column> */}\n                    <Grid.Column  width={5}>\n                    {/* <DatePicker style={{ width: \"150px\" }} dateformat={\"YYYY-MM-DD\"} selected={this.state.deadline} onChange={(date)=>{this.selectDeadline(date)}} /> */}\n                    <DateInput\n                                id=\"GoalFormDeadline\"\n                                label='Deadline'\n                                name=\"deadline\"\n                                placeholder=\"Date\"\n                                value={moment(this.state.deadline).format('YYYY-MM-DD')}\n                                iconPosition=\"left\"\n                                dateFormat=\"YYYY-MM-DD\"\n                                onChange={this.handleChangeDeadline}\n                            />  \n                    </Grid.Column>\n                    </Grid>\n                </FormField>\n            </Segment>\n        )\n    }\n\n    onTagsChanged(tags) {\n        this.setState({tags: tags || []})\n    }\n\n    addTagOptions(e,data) {\n        const tagOptions = this.state.tagOptions\n        tagOptions.push({key: data.value, text: data.value, value: data.value})\n        console.log(tagOptions)\n        this.setState({tagOptions:tagOptions})\n    }\n\n    setTag(data) {\n        this.onTagsChanged(data.value)\n    }\n\n    renderTag() {\n        return(\n            <FormField>\n                <label>Add Tags</label>\n                <Dropdown placeholder=\"add goal tags here. You should add a tag in order to add a goal\" search selection \n                    clearable multiple allowAdditions fluid \n                    onAddItem={(e,data) => this.addTagOptions(e, data)} \n                    onChange={(e,data)=>this.setTag(data)}\n                    options={this.state.tagOptions}\n                    className=\"GoalDropDown\"\n                />\n            </FormField>\n        )\n    }\n\n\n    onClickHandler() {\n        // e.preventDefault()\n        // console.log(this.state.tags)\n        let data = new FormData()\n        data.append(\"title\", this.state.title)\n        let start_at = moment(this.state.start_at).startOf('day').unix()\n        let deadline = moment(this.state.deadline).startOf('day').unix() + (24*60*60 - 1)\n        console.log(\"Modified deadline: \", moment.unix(start_at).format('MMMM Do YYYY, h:mm:ss a'))\n        data.append(\"start_at\", start_at)\n        data.append(\"deadline\", deadline)\n\n        // If you add more than one item to the same key, it makes a list.\n        for (const tag of this.state.tags) {\n            data.append(\"tags\", tag)\n        }\n        console.log(\"Create goal data.get('tags'): \", data.get('tags'))\n\n        this.props.addGoal(data, this.state.file)\n        this.setState({ isCreating: true })\n    }\n\n    // confirmHandler = () => {\n    //     formData = new FormData()\n    //     data.append(\"title\", this.state.file)\n    //     data.append()\n    //     data.append(\"tags\")\n    // }\n\n    // sendRequestTest() {\n    //     let data = new FormData()\n    //     data.append(\"title\", \"title\")\n    //     data.append('photo', this.state.file)\n    //     data.append(\"deadline\", \"2020-11-11 12:00:00\")\n    //     console.log(data.get('deadline'))\n\n    //     axios.post('/api/v1/goal/', data, {\n    //         headers: {\n    //             \"Content-Type\": \"multipart/form-data\",\n    //           },\n    //     })\n    //     .then((res) => console.log(res))\n    //     .catch((err) => console.log(err));\n    // }\n\n    render(){\n        return(\n            <div>\n            <div className='menubar'>\n                <MenuBar/>\n            </div>\n            <div style={\n                {\n                    marginLeft: '130px',\n                    marginTop: '50px',\n                    maxWidth: '700px',\n                    marginRight: '10%',\n                }\n            }>\n            <LoadingOverlay\n                className=\"spinner\"\n                active={this.state.isCreating}\n                spinner\n                text='Creating a new goal...'\n            >\n                <h2 id=\"header\">Add a Goal</h2>\n                <Form id=\"FormCreateForm\" className='FormCreate'>\n                    {this.renderTitle()}\n                    {this.renderPhoto()}\n                    {/* {this.fileRender()} */}\n                    {this.renderDeadline()}\n                    {this.renderTag()}\n                    <Button floated=\"right\">Go Back</Button>\n                    <Button \n                        onClick={()=>this.onClickHandler()} \n                        // disabled={(this.state.tags.length == 0) ? true : false}\n                        floated=\"right\" className=\"GoalSubmitButton\"\n                    >\n                        Confirm\n                    </Button>\n                </Form>\n            </LoadingOverlay>\n            </div>\n            </div>\n        )\n    }\n\n}\n\n\n\nexport default connect(null, { addGoal })(withRouter(CreateGoal))","import React, { Component, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport LoadingOverlay from 'react-loading-overlay';\nimport { DateInput} from 'semantic-ui-calendar-react'\nimport { Form , Button, Input, Icon, Progress, Segment, FormField, Dropdown, label, Grid, Container} from 'semantic-ui-react'\n\nimport \"react-datepicker/dist/react-datepicker.css\"\n// import { isThisSecond } from 'date-fns';\nimport { editGoal } from '../../store/actions'\nimport './EditGoal.css'\n\n\nclass EditGoal extends Component {\n\n    state = {\n      title: \"\",\n      file: null,\n      fileName: \"\",\n      upload: false,\n      deadline: new Date(),\n      start_at: new Date(),\n      tags: [],\n      tagOptions:[],\n      isEditing: false,\n      preview: (this.props.selectedGoal.photo == null) ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/480px-No_image_available.svg.png' : this.props.selectedGoal.photo\n    }\n\n    renderDefaultDate() {\n        const start_at = moment.unix(this.props.selectedGoal.start_at).format(\"YYYY-MM-DD\")\n        const deadline = moment.unix(this.props.selectedGoal.deadline).format(\"YYYY-MM-DD\")\n        this.setState({start_at: start_at, deadline: deadline})\n    }\n\n    renderDefaultTagOptions() {\n        console.log(\"CALLED\")\n        const defaultTagOptions = []\n        const defaultTag = []\n        this.props.selectedGoal.tags.map((t)=>{\n            defaultTagOptions.push({key: t, text: t, value: t})\n            defaultTag.push(t)\n        })\n        this.setState({tagOptions: defaultTagOptions, tags: defaultTag})\n        console.log(\"[DEBUG] tagOptions\", this.state.tagOptions)\n        console.log(\"[DEBUG] tags\", this.state.tags)\n    }\n\n\n    componentWillMount() {\n        this.renderDefaultTagOptions()\n        // this.setState({title: this.props.selectedGoal.title})\n        // this.renderDefaultDate()\n    }\n\n    componentDidMount() {\n        this.setState({title: this.props.selectedGoal.title})\n        this.renderDefaultDate()\n    }\n\n    fileChange = e => {\n        if(e.target.files){\n        this.setState(\n          { file: e.target.files[0], fileName: e.target.files[0].name, upload: true},\n          () => { console.log( \"File chosen --->\", this.state.file, console.log(\"File name  --->\", this.state.fileName))},\n          )\n          this.setState({ preview:  URL.createObjectURL( e.target.files[0])});\n        }\n        else {\n        //    this.setState({file: default_goal_pic})\n        //    console.log(this.state.file)\n        //    const imageUrl = URL.createObjectURL(this.state.file)\n        //     console.log(imageUrl)\n        }\n        \n    }\n\n    renderTitle() {\n        return (\n            <Form.Field>\n                <label>Goal Title</label>\n                <Input placeholder='Enter Title Here' \n                defaultValue={this.props.selectedGoal.title}\n                onChange={(e)=>this.setState({title: e.target.value})}\n                id=\"EditGoalFormTitle\"\n                ></Input>\n            </Form.Field>\n        )\n    }\n\n    renderPhoto() {\n        const { statusCode } = this.state;\n        return (\n            <Segment>\n                <Grid columns='2'>\n                    <Grid.Column width=\"11\">\n                        <Form.Field\n                        style={\n                            {\n                                marginTop: '20px'\n                            }\n                        }>\n                            <label id=\"PhotoInput\">Add Goal Photo</label>\n                            <Button as=\"label\" htmlFor=\"file\" type=\"button\" animated=\"fade\">\n                            <Button.Content visible>\n                                <Icon name=\"file\" />\n                            </Button.Content>\n                            <Button.Content hidden>Choose a File</Button.Content>\n                            </Button>\n                            <input type=\"file\" id=\"file\" className=\"EditGoalPhoto\" hidden onChange={this.fileChange}/>\n                            <Form.Input fluid label=\"Photo Chosen \" placeholder=\"Upload to edit goal photo\" readOnly\n                            value={this.state.fileName}\n                            />\n                            {/* <Button style={{ marginTop: \"7px\" }} onClick={this.fileChange} id=\"UploadPhotoButton\"> Upload </Button> */}\n                        </Form.Field>\n                    </Grid.Column>\n                    <Grid.Column width=\"5\">\n                        {this.fileRender()}\n                    </Grid.Column>\n                </Grid>\n          </Segment>\n        )\n    }\n\n    fileRender() {\n        return(\n                    <Segment style={\n                        {\n                            boxShadow: 'none',\n                            alignItems: 'center'\n                            \n                        }\n                    }\n                    textAlign='center'>\n                    <img id=\"image\" src={this.state.preview} style={\n                        {\n                            maxWidth: '150px', \n                            maxHeight: '180px',\n                            minWidth: '150px',\n                            minHeight: '150px',                      \n                        }\n                    }></img>\n                    </Segment>\n        )\n    }\n\n    // selectDeadline(date) {\n    //     this.setState({deadline:date})\n    // }\n\n    // formatDate(d) {\n    //     // console.log(date.toString('MM/dd/yyyy'))\n    //     var curr_date = d.getDate();\n    //     var curr_month = d.getMonth() + 1; //Months are zero based\n    //     var curr_year = d.getFullYear();\n    //     return curr_month + \"/\" + curr_date + \"/\" + curr_year\n    // }\n\n    handleChangeStart = (event, {name, value}) => {\n        this.setState({ [name]: value });\n     }\n\n   handleChangeDeadline = (event, {name, value}) => {\n       this.setState({ [name]: value });\n    }\n\n   renderDeadline() {\n       return(\n           <Segment>\n               <FormField>\n                   {/* <label>Select Goal Deadline</label> */}\n                   <Grid columns='two' textAlign='center' className=\"DeadlineGrid\">\n                   <Grid.Column width={5}>\n                   {/* <Input id=\"todayDate\" style={{ width: \"175px\" }} readOnly value={this.formatDate(this.state.startdate)}></Input> */}\n                   <DateInput\n                               id=\"GoalFormStart\"\n                               label='Starting From'\n                               name=\"start_at\"\n                               placeholder=\"Date\"\n                               value={moment(this.state.start_at).format('YYYY-MM-DD')}\n                               iconPosition=\"left\"\n                               dateFormat=\"YYYY-MM-DD\"\n                               onChange={this.handleChangeStart}\n                           />  \n                   </Grid.Column >\n                   {/* <Grid.Column width={1}><Container><h5>to</h5></Container></Grid.Column> */}\n                   <Grid.Column  width={5}>\n                   {/* <DatePicker style={{ width: \"150px\" }} dateformat={\"YYYY-MM-DD\"} selected={this.state.deadline} onChange={(date)=>{this.selectDeadline(date)}} /> */}\n                   <DateInput\n                               id=\"GoalFormDeadline\"\n                               label='Deadline'\n                               name=\"deadline\"\n                               placeholder=\"Date\"\n                               value={moment(this.state.deadline).format('YYYY-MM-DD')}\n                               iconPosition=\"left\"\n                               dateFormat=\"YYYY-MM-DD\"\n                               onChange={this.handleChangeDeadline}\n                           />  \n                   </Grid.Column>\n                   </Grid>\n               </FormField>\n           </Segment>\n       )\n   }\n\n   onTagsChanged(tags) {\n       this.setState({tags: tags})\n   }\n\n   addTagOptions(e,data) {\n       const tagOptions = this.state.tagOptions\n       tagOptions.push({key: data.value, text: data.value, value: data.value})\n       console.log(tagOptions)\n       this.setState({tagOptions:tagOptions})\n   }\n\n   setTag(data) {\n       this.onTagsChanged(data.value)\n   }\n\n   renderTag() {\n       return(\n           <FormField>\n               <label>Add Tags</label>\n               <Dropdown placeholder=\"add goal tags here\" search selection \n                   clearable multiple allowAdditions fluid \n                   onAddItem={(e,data) => this.addTagOptions(e, data)} \n                   onChange={(e,data)=>this.setTag(data)}\n                   options={this.state.tagOptions}\n                   className=\"GoalDropDown\"\n               />\n           </FormField>\n       )\n   }\n\n    onTagsChanged(tags) {\n        console.log(\"tag changing\")\n        this.setState({tags: tags})\n        console.log(this.state.tags)\n    }\n\n    addTagOptions(e,data) {\n        const tagOptions = this.state.tagOptions\n        tagOptions.push({key: data.value, text: data.value, value: data.value})\n        this.setState({tagOptions:tagOptions})\n    }\n\n    setTag(data) {\n        console.log(\"DEBUG: data change\", data.value)\n        this.onTagsChanged(data.value)\n    }\n\n    renderTag() {\n        return(\n            <FormField>\n                <label>Add Tags</label>\n                <Dropdown search selection \n                    clearable multiple allowAdditions fluid \n                    defaultValue={this.state.tags}\n                    onAddItem={(e,data) => this.addTagOptions(e, data)} \n                    onChange={(e,data)=>this.onTagsChanged(data.value)}\n                    options={this.state.tagOptions}\n                />\n            </FormField>\n        )\n    }\n\n\n    onClickHandler = () => {\n        // e.preventDefault()\n        let data = {}\n        console.log(\"EditGoalComponent this.state.title: \", this.state.title)\n        console.log(\"EditGoalComponent this.props.selectedGoal.photo: \", this.props.selectedGoal.photo)\n\n        data['title'] = this.state.title\n        // data.append(\"title\", this.state.title)\n        let start_at = moment(this.state.start_at).startOf('day').unix()\n        let deadline = moment(this.state.deadline).startOf('day').unix() + (24*60*60 - 1)\n        // console.log(\"Modified deadline: \", moment.unix(deadline).format('MMMM Do YYYY, h:mm:ss a'))\n        data['start_at'] = start_at\n        data['deadline'] = deadline\n        // data.append(\"deadline\", deadline)\n        // console.log(\"DEBUG: this state tags\", this.state.tags)\n        data['tags'] = this.state.tags\n        // for (const tag of this.state.tags) {\n        //     data.append(\"tags\", tag)\n        // }\n\n        // let key = ''\n        if (this.props.selectedGoal.photo) { // A user already has a photo\n            data['photo'] = this.props.selectedGoal.photo\n            // console.log(\"[DEBUG] this.props.selectedGoal.photo: \", this.props.selectedGoal.photo)\n        } \n        // console.log(\"[DEBUG] EditGoalComponent key: \", key)\n        console.log(\"[DEBUG] EditGoalComponent formData: \", data)\n    // const data = {\n    //     title: formData.get('title'),\n    //     photo: formData.get('photo'),\n    //     deadline: formData.get('deadline'),\n    //     tags: formData.get('tags')\n    // }\n\n        this.props.editGoal(this.props.selectedGoal.id, data, this.state.file)\n\n        this.setState({ isEditing: true })\n    }\n\n    render(){\n        console.log(\"selected goal: \", this.props.selectedGoal)\n        return(\n            <div className=\"EditGoalForm\">\n                {/* {this.props.selectedGoal == null} */}\n            <LoadingOverlay\n                active={this.state.isEditing}\n                spinner\n                text='Editing a new goal...'\n            >\n            {/* <div className='menubar'>\n                <MenuBar/>\n            </div> */}\n            <div>\n                <Form className=\"EditGoalForm\">\n                {this.renderTitle()}\n                {this.renderPhoto()}\n                {this.renderDeadline()}\n                {this.renderTag()}\n                {/* <Button floated=\"right\">Go Back</Button>\n                <Button onClick={()=>this.onClickHandler()} floated=\"right\">Confirm</Button> */}\n                <Button floated=\"right\">Go Back</Button>\n                <Button onClick={this.onClickHandler} floated=\"right\" className=\"ConfirmButton\" id=\"ConfirmButtonEditGoalForm\">Confirm</Button>\n                </Form>\n            </div>\n            </LoadingOverlay>\n            </div>\n        )\n    }\n\n}\n\nexport default connect(null, { editGoal })(EditGoal)\n","import React, {Component} from 'react'\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Container, GridColumn, Form} from 'semantic-ui-react'\nimport './TaskBody.css'\nimport { connect } from 'react-redux'\nimport Axios from 'axios'\n// import {} from '../../store/actions/index'\nimport moment from 'moment'\nimport Rating from '@material-ui/lab/Rating'\nimport { DateInput,} from 'semantic-ui-calendar-react'\n\nimport { editTask, deleteTask } from '../../store/actions'\n\nclass TaskBodyComponent extends Component {\n    // props have goal id, title, deadline, and tags\n    // the tasks here are originally from backend\n    // TODO: connect with redux\n\n    state = {\n        editmode: false,\n        readmode: true,\n        title: this.props.task.title,\n        importance: this.props.task.importance,\n        day_of_week: this.props.task.day_of_week,\n        start_at: this.props.task.start_at,\n        deadline: this.props.task.deadline\n    }\n\n    onClickEditTaskHandler = () => {\n       const neweditmode = !(this.state.editmode)\n       const newreadmode = !(this.state.readmode)\n       this.setState({editmode: neweditmode, readmode: newreadmode})\n    }\n\n    onClickDeleteTaskHandler = () => {\n        // TODO\n        const task_id = this.props.task.id\n        const goal_id = this.props.task.goal_id\n        this.props.deleteTask(goal_id, task_id);\n    }\n\n    // deadline is a timestamp\n    deadlineDate = (deadline) => {\n        return moment.unix(deadline).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    startAtDate = (start_at) => {\n        return moment.unix(start_at).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    renderDeadlineString = (day_of_week, start_at, deadline) => {\n        let str = \"From \"\n        str = str +  this.startAtDate(start_at) + \", Until \" + this.deadlineDate(deadline)\n        if(day_of_week.length !== 0) {\n            var daystr = \"On every \"\n            for (var d of day_of_week) {\n                d = d.toLowerCase()\n                d = d.charAt(0).toUpperCase() + d.slice(1);\n                daystr = daystr + d + \",\"+ \" \"\n            }\n            daystr = daystr.slice(0, daystr.length-2)\n            return (\n            <div className=\"TaskBodyListDeadline\">{str}<br></br>{daystr}</div>\n            )\n        }\n        return (\n            <div className=\"TaskBodyListDeadline\">{str}</div>\n        )\n    }\n\n    // setDeadlineString = (string) => {\n    //     console.log(\"[DEBUG] dadline string: \", string)\n    //     const deadline = moment(string, 'YYYY-MM-DD').startOf('day').unix() + (24*60*60 - 1)\n    //     // setDeadline(deadline)\n    //     this.setState({deadline: deadline})\n    // }\n\n    onSubmit = e => { // e: event\n        // TODO: cannot call setState during render\n        // this.setState({editmode: false})\n        const data = {\n            title: this.state.title,\n            importance: this.state.importance,\n            day_of_week: this.state.day_of_week,\n            start_at: moment(this.state.start_at).unix()*1000,\n            deadline: moment(this.state.deadline).unix()*1000\n        }\n        console.log(\"Edit task data: \", data)\n\n        this.props.editTask(this.props.task.id, data)\n\n        const neweditmode = !(this.state.editmode)\n        const newreadmode = !(this.state.readmode)\n        this.setState({editmode: neweditmode, readmode: newreadmode})\n    }  \n    \n    closeHandler = () => {\n        const neweditmode = !(this.state.editmode)\n        const newreadmode = !(this.state.readmode)\n        this.setState({editmode: neweditmode, readmode: newreadmode})\n    }\n\n    // handleChange = (event, {name, value}) => {\n    //     if (this.state.hasOwnProperty(name)) {\n    //         console.log(moment(value))\n    //       this.setState({ [name]: value });\n    //     }\n    //   }\n\n    handleChangeStartAt = (event, { value }) => {\n        // this.props.goal_start_at is a timestamp\n        // value is in a \"YYYY-MM-DD\" format\n        if(moment(value) < moment.unix(this.props.goal_start_at)){\n            window.alert(\"task start date cannot be earlier than goal start date. Goal start date will be set.\")\n            this.setState({start_at: this.props.goal_start_at})\n        }\n        else {\n            this.setState({ start_at: moment(value).unix() })\n        }\n     }\n\n    handleChangeDeadline = (event, { value }) => {\n        if(moment(value) > moment.unix(this.props.goal_deadline)){\n            window.alert(\"Task deadline cannot be longer than goal deadline. Goal deadline will be set.\")\n            this.setState({ deadline: this.props.goal_deadline });\n        }\n        else {\n            this.setState({ deadline: moment(value).unix() });\n        }\n      }\n\n    renderEditMode = () => {\n        const options = [\n            { key: 'm', text: 'Monday', value: 'MONDAY' },\n            { key: 't', text: 'Tuesday', value: 'TUESDAY' },\n            { key: 'w', text: 'Wednesday', value: 'WEDNESDAY' },\n            { key: 'th', text: 'Thursday', value: 'THURSDAY' },\n            { key: 'f', text: 'Friday', value: 'FRIDAY' },\n            { key: 's', text: 'Saturday', value: 'SATURDAY' },\n            { key: 'su', text: 'Sunday', value: 'SUNDAY' },\n          ]\n\n        return (\n            <Form>\n            <Segment className=\"EditTaskForm\" id=\"EditTaskFormSegment\">\n            <h3>Edit: {this.state.title}</h3>\n                <Form.Group widths='equal'>\n                    <Form.Input label='Title' placeholder='Enter task title' \n                    onChange={(e,data)=> this.setState({title: data.value})} \n                    id=\"EditTaskFormTitle\"\n                    defaultValue={this.state.title}\n                    />\n                    </Form.Group>\n                        <Form.Group>\n                            <Form.Select\n                                multiple selection\n                                label='Day of Week'\n                                id=\"EditTaskFormDayofWeek\"\n                                options={options}\n                                defaultValue={this.props.task.day_of_week}\n                                onChange={(e,data)=>this.setState({day_of_week: data.value})}\n                                placeholder='Day of Week'\n                            />\n                            <DateInput\n                                label='Start At'\n                                id=\"EditTaskFormDeadline\"\n                                name=\"start_at\"\n                                placeholder=\"Date\"\n                                value={moment.unix(this.state.start_at).format('YYYY-MM-DD')}\n                                iconPosition=\"left\"\n                                dateFormat=\"YYYY-MM-DD\"\n                                onChange={this.handleChangeStartAt}\n                            />\n                            <DateInput\n                                label='Deadline'\n                                id=\"EditTaskFormDeadline\"\n                                name=\"deadline\"\n                                placeholder=\"Date\"\n                                value={moment.unix(this.state.deadline).format('YYYY-MM-DD')}\n                                iconPosition=\"left\"\n                                dateFormat=\"YYYY-MM-DD\"\n                                onChange={this.handleChangeDeadline}\n                            />\n                        </Form.Group>\n                    <Form.Group inline>\n                    <label>Importance</label>\n                        <Rating\n                            name=\"simple-controlled\"\n                            size=\"large\"\n                            id=\"EditTaskFormImportance\"\n                            value={this.state.importance}\n                            onChange={(event, newValue) => {\n                                this.setState({importance: newValue})\n                            }} \n                        />\n                    </Form.Group>\n                    <Button.Group>\n                        <Button className=\"EditTaskSubmitButton\" id=\"EditTaskSubmit\" onClick={this.onSubmit}>Submit</Button>\n                        <Button icon className=\"EditTaskCloseButton\" id=\"EditTaskClose\" onClick={this.closeHandler}><Icon name='x'/></Button>\n                    </Button.Group>\n                    {/* <Form.Button className=\"EditTaskSubmitButton\" onClick={this.onSubmit()}>Submit</Form.Button>                     */}\n                </Segment>\n        </Form>\n        )\n    }\n\n    renderReadMode = () => {\n        const { title, deadline, importance, day_of_week } = this.props.task\n        return (\n            <Segment className=\"TaskBodySegment\">\n            <List className=\"TaskBodyTitleList\">\n                <List.Item className=\"TaskBodyListItem\">\n                <Icon name='circle' className=\"TaskBodyListIcon\" size=\"small\"/>\n                    <List.Content className=\"TaskBodyListTitle\">\n                        <List.Header className=\"TaskBodyListTitleHeader\">    \n                            {this.state.title}\n                            <Rating className=\"TaskBodyListRating\"\n                                    name=\"simple-controlled\"\n                                    size=\"small\"\n                                    id=\"AddTaskFormImportance\"\n                                    value={this.state.importance}\n                                    readOnly\n                                />\n                        </List.Header>\n                            {this.renderDeadlineString(this.state.day_of_week, this.state.start_at, this.state.deadline)}\n                    </List.Content>\n                </List.Item>\n            </List>\n            <List.Item>\n                    <Button.Group className=\"DeleteTaskButtonGroupAnother\" floated=\"right\">\n                        {/* <Button icon id=\"DeleteButtonTaskBody\" \n                        style={\n                            {\n                                backgroundColor: \"#ffffff\",\n                                padding: '5px'\n                            }\n                        }\n                        onClick={()=>this.onClickDeleteTaskHandler()}><Icon name='delete'/>&nbsp;Delete</Button> */}\n                        <Button size=\"small\" icon id=\"EditButtonTaskBody\" onClick={()=>this.onClickEditTaskHandler()}\n                        style={\n                            {\n                                backgroundColor: \"#ffffff\",\n                                padding: '5px',\n                            }\n                        }\n                        ><Icon name='edit'/>&nbsp;Edit</Button>\n                    </Button.Group> \n            </List.Item>\n            <br></br>\n        </Segment>\n        )\n    }\n\n    render() {\n    return(\n        <> \n        {this.state.readmode && this.renderReadMode()}\n        {/* {this.renderReadMode()} */}\n        {this.state.editmode && this.renderEditMode()}\n        {/* {console.log(this.state.readmode, this.state.editmode)} */}\n        </>\n    )\n    }\n}\n\n\nexport default connect(null, { editTask, deleteTask })(TaskBodyComponent)","import React, {Component} from 'react'\nimport TaskBody from '../../components/TaskBody/TaskBodyComponent'\nclass EditTask extends Component {\n\n    render(){\n        let toTaskBody = []\n        toTaskBody = this.props.tasks.map(t => <TaskBody task={t} key={t.id} goal_start_at={this.props.goal_start_at} goal_deadline={this.props.goal_deadline}/>)\n\n        return (\n            <div className=\"EditTaskComp\">\n            {console.log(\"DEBUG: tasks info\", this.props.tasks)}\n            {toTaskBody}\n            </div>\n        )\n    }\n}\n\nexport default EditTask","import React, {Component} from 'react'\nimport MenuBar from '../../components/Menubar/MenuBarComponent'\nimport { withRouter } from 'react-router-dom'\nimport EditGoal from './EditGoalComponent'\nimport EditTask from './EditTaskComponent'\nimport { Button, Container } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport history from '../../history'\nimport './EditPage.css'\n\n\nclass EditPage extends Component {\n    state = {\n        editGoal: false\n    }\n\n    // returnIfNull = () => {\n    //     if(this.props.selectedGoal) {\n    //         history.push('/')\n    //     }\n    // }\n\n    render() {\n        return (\n            <div className=\"EditPage\">\n                {/* {this.returnIfNull} */}\n                <div className='menubar'>\n                    <MenuBar/>\n                </div>\n                <div className=\"EditGoalTaskTab\">\n                {/* <Container className=\"EditGoalTaskContainer\"> */}\n                    <Button.Group className=\"EditGoalTaskButtonGroup\">\n                        <Button className=\"EditTaskTabButton\" onClick={()=>this.setState({editGoal: false})}>Edit Tasks</Button>\n                        <Button className=\"EditGoalTabButton\" onClick={()=>this.setState({editGoal: true})}>Edit Goal</Button>\n                    </Button.Group>            \n                {/* </Container> */}\n                    {this.state.editGoal ? \n                    <>\n                    <h2>Edit a Goal</h2> \n                    <EditGoal selectedGoal={this.props.selectedGoal}/>\n                    </>\n                    : \n                    <>\n                    <h2>Edit Tasks</h2> \n                    {(this.props.selectedGoal) ? \"\" : history.push('/main')}\n                    {((this.props.selectedGoal !== null) && (this.props.selectedGoal.tasks).length > 0) ? <EditTask goal_start_at={this.props.selectedGoal.start_at} goal_deadline={this.props.selectedGoal.deadline} tasks={this.props.selectedGoal.tasks}/> : <h5>\"Please add tasks first!\"</h5>}\n                    </>}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(\"EditPageComponent selectedGoal: \", state.goal.selectedGoal)\n    return{\n        selectedGoal: state.goal.selectedGoal,\n        // taskList: state.task.tasks,\n    }\n}\n\nexport default connect(mapStateToProps, null) (EditPage)\n","import React, {Component} from 'react'\nimport { useState, useEffect } from 'react';\nimport ReactWordcloud from 'react-wordcloud';\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Container} from 'semantic-ui-react'\nimport './DashBoardPanel.css'\nimport {VictoryPie, VictoryTheme, VictoryLabel} from 'victory'\nimport SVG from 'react-inlinesvg'\n\nexport const DashBoardPanel = (props)  => {\n\n    const percentage = props.metric\n    const wantedMetric = [{ y: percentage }, { y: 100-percentage }]; // Data that we want to display\n    const defaultMetric = [{ y: 0 }, { y: 100 }, ]; \n\n    const [metric, setMetric] = useState(defaultMetric);\n\n    useEffect(() => {\n        setMetric(wantedMetric); // Setting the data that we want to display\n    }, []);\n\n    // const data = [\n    //     {text: \"test\" ,value: 210},\n    //     {text: \"test1\" ,value: 100},\n    //     {text: \"test2\" ,value: 90},\n    //     {text: \"test3\" ,value: 100},\n    //     {text: \"test4\" ,value: 60},\n    //     {text: \"test5\" ,value: 150},\n    //     {text: \"test6\" ,value: 170},\n    //     {text: \"test7\" ,value: 80},\n    //     {text: \"test8\" ,value: 210},\n    //     {text: \"test9\" ,value: 100},\n    //     {text: \"test10\" ,value: 90},\n    //     {text: \"test11\" ,value: 100},\n    //     {text: \"test12\" ,value: 60},\n\n    // ]\n    const cloud_options = {\n        rotations: 2,\n        rotationAngles: [-90, 0],\n        fontFamily: \"impact\",\n        fontSizes: [12, 38],\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        colors: [\n            \"#173f5f70\",\n            \"#20639b\",\t\n            \"#ed553b\",\t\n            \"#04837c\" ]\n    }\n\n    \n    const renderPie = () =>  {\n        return (\n        <svg viewBox=\"0 0 500 400\">\n            <VictoryPie\n            standalone={false}\n            animate={{ easing: 'exp' }}\n            labelComponent={<span/>}\n            width={500} height={400}\n            data={metric}\n            innerRadius={166}\n            colorScale={[\"#19B3A6\", \"#EEEEEE\" ]}\n            // style={{ labels: { fontSize: 20, fill: \"white\" } }}\n            />\n            <VictoryLabel\n            textAnchor=\"middle\"\n            style={{ fontSize: 50 }}\n            x={250} y={200}\n            text={percentage+\"%\"}\n            />\n        </svg>\n        )\n    }\n\n    return(\n        <div className=\"DashBoardPanel\">\n        {console.log(\"PANEL PROPS:  \", props)}\n            {/* <h2>Overall Info</h2> */}\n            <Grid className=\"DashBoardPanelGrid\">\n                <Grid.Row>\n                    <Segment\n                    style={\n                        {boxShadow: \"none\"}\n                        }>\n                        <h5>WordCloud of goal tags</h5>\n                        <ReactWordcloud \n                        className=\"wordCloud\" \n                        words={props.wordList} \n                        options={cloud_options}\n                        />                        \n                    </Segment>\n                </Grid.Row>\n                <Grid.Row className=\"goalsDoneRow\">\n                    <Segment className=\"goalsDoneSegment\"\n                    style={\n                        {boxShadow: \"none\"}\n                        }>\n                        <h5>Percentage of Finished Goals</h5>\n                        {renderPie}\n                    </Segment>\n                </Grid.Row>\n                <Grid.Row>\n                    {/* {TBD} */}\n                </Grid.Row>\n            </Grid>\n        </div>\n    )\n    \n}\n","import React from \"react\";\nimport { Card, Icon, Button, Label } from \"semantic-ui-react\";\nimport moment from 'moment'\nimport { withRouter } from 'react-router-dom'\nimport history from '../../history'\nimport {getGoal, deleteGoal} from '../../store/actions/index'\nimport { connect } from \"react-redux\";\n\nclass GoalCard extends React.Component {\n\n  state = {\n    title: this.props.goal.title,\n    url: (this.props.goal.photo == null) ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/480px-No_image_available.svg.png' : this.props.goal.photo\n  }\n\n  getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  renderTags = () => {\n    let label = []\n    label = this.props.goal.tags.map(t => {\n      const color = this.randomColor()\n    return (<Label horizontal style={\n      {marginTop: '2px', marginBottom: '2px', backgroundColor: color, color: '#FFFFFF'}\n    }>{t}</Label>)\n      }\n    )\n    return label\n  }\n  // BUG: randomColor func is generating undesired popups\n  randomColor = () => {\n    let randomNumber = this.getRandomInt(0, 5)\n    switch(randomNumber) {\n      case(0):\n        return \"#24b4ab\"\n      case(1):\n        return \"#173f5f\"\n      case(2):\n        return \"#686566\"\n      case(3):\n        return \"#20639b\"\n      case(4):\n        return \"#ed553b\"\n      case(5):\n        return \"#04837c\"\n    } \n  }\n\n  onClickHandler = () => {\n    history.push('/goalhistory/' + this.props.goal.id)\n  }\n\n  onClickEditGoalHandler = async () => {\n    await this.props.getGoal(this.props.goal.id)\n    history.push('/edit')\n  }\n\n  onClickDeleteHandler = () => {\n      var deleteGoal = window.confirm(\"Tasks and achievements of this goal will be lost. Are you sure?\")\n      if(deleteGoal) {\n        this.props.deleteGoal(this.props.goal.id)\n      }\n  }\n\n  render() {\n    \n    const url = 'url(' + this.state.url + ')'\n    return (\n      <Card className=\"DashGoalCardComp\"\n      style={{\n        width: '200px'\n      }}\n      >\n        <Card.Content\n          style={{\n            height: \"180px\",\n            backgroundImage: url,\n            backgroundSize: \"cover\",\n          }}\n        >\n        <Card.Description>\n        {this.renderTags()}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content header={this.props.goal.title} \n            textAlign=\"center\"s\n            style={\n              {padding: '12px'}\n            }\n            > \n        </Card.Content>\n        <Card.Description textAlign=\"center\"\n        style={\n          {color: \"#807e7e\", marginBottom: '2px'}\n        }>\n              From {moment.unix(this.props.goal.start_at).format('MMM Do YYYY')} <br></br> Until {moment.unix(this.props.goal.deadline).format('MMM Do YYYY')}\n            </Card.Description>\n        <Card.Content extra>\n          <Button.Group size='tiny'>\n          <Button onClick={this.onClickHandler}>\n            Click for Details\n          </Button>\n          <Button size=\"tiny\" compact icon className=\"DashEditGoal\"  onClick={()=>this.onClickEditGoalHandler()}><Icon name='edit'/></Button>\n          <Button size=\"tiny\" compact icon className=\"DashDeleteGoal\" onClick={()=>this.onClickDeleteHandler()}><Icon name='trash'/></Button>\n          </Button.Group>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default connect(null, {getGoal, deleteGoal})(withRouter(GoalCard))","import React, {Component} from 'react'\nimport { useState, useEffect } from 'react'\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Dropdown, Card} from 'semantic-ui-react'\nimport './DashBoardCards.css'\nimport GoalCard from '../../../components/DashBoardGoalCards/DashBoardGoalCard'\nimport { useSelector, useDispatch } from 'react-redux';\nimport history from '../../../history';\nimport moment from 'moment'\n\nclass DashBoardCards extends Component{\n\n    // console.log(props.goalCardList)\n    state = {\n        select: 0,\n        show: 0,\n        max: (this.props.goalCardList.length)/6,\n        showOptions: [\n            { key: 1, text: 'Show All', value: 1 },\n            { key: 2, text: 'Ongoing', value: 2 },\n            { key: 3, text: 'Finished', value: 3 },\n            { key: 4, text: 'Future', value: 4 },\n        ]\n\n    }\n\n    // goalCardList = goalCardList.map(g => <GoalCard goal={g}/>)\n    \n    renderShowbyTime = (value) =>{\n        const today = moment(new Date).startOf('day').unix()\n        let list = []\n        switch(value) {\n            case(1):\n                return this.props.goalCardList.map(g => <GoalCard goal={g}/>)\n            case(2):\n                list = this.props.goalCardList.reduce((pre, g) => {\n                    if((g.start_at <= today) && (g.deadline >= today)) {\n                        pre.push(g)\n                    }\n                    return pre\n                }, [])\n                return list.map(g => <GoalCard goal={g}/>)\n            case(3):\n                list = this.props.goalCardList.reduce((pre, g) => {\n                    if(g.deadline < today) {\n                        pre.push(g)\n                    }\n                    return pre\n                }, [])\n                return list.map(g => <GoalCard goal={g}/>)\n            case(4):\n                list = this.props.goalCardList.reduce((pre, g) => {\n                    if(g.start_at > today) {\n                        pre.push(g)\n                    }\n                    return pre\n                }, [])\n                return list.map(g => <GoalCard goal={g}/>)\n            default:\n                return this.props.goalCardList.map(g => <GoalCard goal={g}/>)\n        }\n    }\n\n    // range select by clicking buttons\n    renderSelect = () => {\n        let start = (this.state.select*6)\n        let selectedList = this.renderShowbyTime(this.state.show)\n        return (\n            selectedList.slice(start, start+6)\n        )\n    }\n\n    prevHandler = () => {\n       this.setState({select: (this.state.select-1)})\n    }\n\n    nextHandler = () => {\n        this.setState({select: (this.state.select+1)})\n    } \n\n    render() {\n    return (\n        <div className=\"DashBoardGoalCards\">\n            <h2\n            style={\n                { paddingTop: '5px' }\n            }\n            >Your Goals</h2>        \n\n                <Dropdown placeholder='Filter by' search selection options={this.state.showOptions} onChange={(e,data)=>this.setState({show: data.value})}\n                style = {{border: 'none', marginRight: '20px', marginLeft: '5px'}}\n                />\n\n                <Button.Group>\n                <Button size=\"tiny\" disabled={this.state.select == 0 ? true : false} onClick={() => this.prevHandler()} icon='angle left' className=\"dashcardprev\">\n                </Button>\n                <Button size=\"tiny\" disabled={this.state.select == (Math.floor(this.state.max)) ? true : false} onClick={() => this.nextHandler()} icon='angle right' className=\"dashcardnext\"></Button>\n                {/* {console.log(\"DEBUG: next and max\", select, Math.floor(max))} */}\n            </Button.Group>\n            <Segment\n            style={\n                {boxShadow: \"none\", border: 'none'}\n                }>\n                <Card.Group>\n                    {this.renderSelect()}\n                </Card.Group>\n            </Segment>\n        </div>\n    )\n            }\n}\n\nexport default DashBoardCards","import React, {Component} from 'react'\nimport { Grid, GridColumn } from 'semantic-ui-react'\nimport MenuBar from '../../components/Menubar/MenuBarComponent'\nimport './DashBoard.css'\nimport {DashBoardPanel} from './DashBoardPanel/DashBoardPanelComponent'\nimport DashBoardCards from './DashBoardCards/DashBoardCardsComponent'\nimport { connect } from 'react-redux'\nimport { getAllGoal } from '../../store/actions/index'\nimport moment from 'moment'\nclass DashBoardComponent extends Component {\n\n    componentDidMount() {\n        // console.log(\"mounting dashboard page\")\n        this.props.getAllGoal()\n    }\n\n    getMetric = () => {\n        if(this.props.goals.length == 0) return 0\n        const today = moment(new Date).startOf('day').unix()\n        let list = this.props.goals.reduce((pre, g) => {\n            if(g.deadline < today) {\n                pre.push(g)\n            }\n            return pre\n        }, [])\n        return (Math.floor( (list.length * 100 ) / (this.props.goals.length) ))\n    }\n\n    // get wordcloud list \n    getWordCloud = () => {\n        let wordList = []\n        for(var goal of this.props.goals){\n            for(var tag of goal.tags) {\n                let obj = wordList.find(w => w.text == tag)\n                if(obj == undefined) {\n                    // add new\n                    wordList.push({text: tag, value: 10})\n                }\n                // already exist, just add 1\n                else {\n                    obj.value += 10\n                }\n            }\n        }\n        console.log(\"wordlist\", wordList)\n        return wordList\n    }\n\n    render(){\n        return(\n            <div className='dashboard'>\n                <div className='menubar'>\n                    <MenuBar/>\n                </div>\n                <Grid columns='2' divided >\n                    <GridColumn className=\"dashboardGrid\">\n                        {/* <h2 className=\"dashboardTitle\">Your Dashboard</h2> */}\n                        <DashBoardPanel metric={() => this.getMetric()} wordList={() => this.getWordCloud()}/>\n                    </GridColumn>\n                    <GridColumn>\n                        <DashBoardCards goalCardList={this.props.goals}/>\n                    </GridColumn>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    // console.log(\"dahboard all goals:\", state.goal.goals)\n    return{\n        goals: state.goal.goals\n    }\n}\n\nexport default connect(mapStateToProps, {getAllGoal}) (DashBoardComponent)","import React, {Component} from 'react'\nimport { Container, Segment, Grid, Label, List, Icon } from 'semantic-ui-react'\nimport './GeneralGoalInfo.css'\nimport moment from 'moment'\nclass GeneralGoalInfo extends Component {\n\n//Things to put in render: title / goal duration / tags / \n\n    // start_at is a timestamp\n    startAtDate = (start_at) => {\n        return moment.unix(start_at).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    // deadline is a timestamp\n    deadlineDate = (deadline) => {\n        return moment.unix(deadline).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    renderTags = () => {\n        let label = []\n        label = this.props.selectedGoal.tags.map(t => {\n          const color = this.randomColor()\n        return (\n            <List.Item>\n        <Label horizontal style={\n          { marginBottom: '2px', backgroundColor: color, color: '#FFFFFF'}\n        }>{t}</Label></List.Item>\n        )\n          }\n        )\n        return label\n    }\n\n    getRandomInt = (min, max) => {\n        min = Math.ceil(min)\n        max = Math.floor(max)\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n    \n    randomColor = () => {\n        let randomNumber = this.getRandomInt(0, 5)\n        switch(randomNumber) {\n          case(0):\n            return \"#24b4ab\"\n          case(1):\n            return \"#173f5f\"\n          case(2):\n            return \"#686566\"\n          case(3):\n            return \"#20639b\"\n          case(4):\n            return \"#ed553b\"\n          case(5):\n            return \"#04837c\"\n        } \n      }\n\n    render() {\n        return(\n            <div className=\"GeneralGoalInfoPanel\">\n                <Segment style={\n                    {boxShadow: \"none\"}\n                    }>\n                    <Grid row='2'>\n                        <Grid.Row>\n                <h2 className=\"GeneralGoalInfoTitle\">{this.props.selectedGoal.title}</h2>\n                        </Grid.Row>\n                        <Grid.Row className=\"GeneralGoalInfoSub\">\n                            <Grid.Column width=\"5\">\n                                <p style ={\n                                    { color: \"#807e7e\"}\n                                }>From {this.startAtDate(this.props.selectedGoal.start_at)}, Until {this.deadlineDate(this.props.selectedGoal.deadline)}</p>\n                            </Grid.Column>\n                                {this.renderTags()}\n                        </Grid.Row>\n                    </Grid>\n                </Segment>\n            </div>\n        )\n    }\n}\n\n\nexport default GeneralGoalInfo","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button, Segment, List, Icon, Grid } from 'semantic-ui-react'\nimport Rating from '@material-ui/lab/Rating'\nimport moment from 'moment'\nimport './TaskInfo.css'\n\nexport const TaskInfo = (props) => {\n\n    const [select, setSelect] = useState(false)\n    // const dispatch = useDispatch()\n\n    const deadlineDate = (deadline) => {\n        return moment.unix(deadline).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    const startAtDate = (start_at) => {\n        return moment.unix(start_at).format('MMM Do YYYY')\n        // return moment.unix(deadline).format('LL')\n    }\n\n    const renderDeadlineString = (day_of_week, start_at, deadline) => {\n        let str = \"From \"\n        str = str +  startAtDate(start_at) + \", Until \" + deadlineDate(deadline)\n        if(day_of_week.length !== 0) {\n            var daystr = \"On every \"\n            for (var d of day_of_week) {\n                d = d.toLowerCase()\n                d = (d.charAt(0).toUpperCase() + d.slice(1)).slice(0,3)\n                daystr = daystr + d + \",\"+ \" \"\n            }\n            daystr = daystr.slice(0, daystr.length-2)\n            return (\n            <p style={\n                {fontSize: '14px', color: \"#807d7d\"}\n            }>\n                {str}<br></br>{daystr}\n            </p>\n            )\n        }\n        return (\n            <p style={\n                {fontSize: '13px', color: \"#807d7d\"}\n            }>{str}</p>\n        )\n    }\n\n   const onSelectTaskHandler = () => {\n        setSelect(true)\n        props.onSelect(props.task.id)\n   }\n\n    return (\n        <Segment\n            style={{boxShadow: \"none\", margin: '0px', border: 'none'}}\n            className=\"TaskInfo\"\n        >\n            <Grid columns='2'\n            style={\n                {padding: '4px'}\n            }\n            >\n                <Grid.Column width=\"2\"\n                style={\n                    {padding: '0px', alignItems: 'center'}\n                }>\n                    <Button icon style={\n                        {backgroundColor: '#FFFFFF'}\n                    }\n                    onClick={onSelectTaskHandler}\n                    >\n                    <Icon name='check circle outline' size=\"large\" style={\n                        {paddingTop: '11px', paddingLeft: '20px'}\n                    }\n                    // className={`TaskSelect${select && 'True'}`}\n                    >\n                    </Icon>\n                    </Button>\n                </Grid.Column>\n                <Grid.Column width=\"14\"\n                style={\n                    {padding: '4px'}\n                }>\n                    <List className=\"TaskInfoTitleList\">\n                        <List.Item className=\"TaskInfoListItem\">\n                            <List.Content className=\"TaskInfoListTitle\">\n                                <List.Header className=\"TaskInfoListTitleHeader\"\n                                style={\n                                    {fontSize: '16px', paddingBottom: '12px', paddingTop: '0px',}\n                                }\n                                >    \n                                    {props.task.title}&nbsp;&nbsp;&nbsp;\n                                    <Rating className=\"TaskInfoListRating\"\n                                            name=\"simple-controlled\"\n                                            size=\"small\"\n                                            id=\"AddTaskFormImportance\"\n                                            value={props.task.importance}\n                                            readOnly\n                                        />\n                                </List.Header>\n                                {renderDeadlineString(props.task.day_of_week, props.task.start_at, props.task.deadline)}\n                            </List.Content>\n                        </List.Item>\n                    </List>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n}","import React, {Component} from 'react'\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Container} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport './Ach.css'\nimport {VictoryPie, VictoryTheme, VictoryLabel} from 'victory'\nimport SVG from 'react-inlinesvg'\nimport Rating from '@material-ui/lab/Rating'\nimport moment from 'moment'\n\nexport const Ach = (props) => {\n    const percentage = props.achievement.percentage_complete\n    const dateString = moment.unix(props.achievement.written_at).format('MMM Do YYYY')\n    return(\n        <Segment className=\"AccContainer\" >\n            <h4>Your achievement on {dateString}</h4>\n            <br></br>\n            <Grid columns='2'className=\"AccGrid\" divided\n            style={\n                {marginLeft: '0px'}\n            }\n            >\n                <Grid.Column width={6} className=\"AccContainerPercentage\"\n                style={\n                    {paddingLeft: '2px'}\n                }>\n                    {/* \"percentage\" */}\n                    <svg viewBox=\"0 0 520 520\">\n                        <VictoryPie\n                        standalone={false}\n                        labelComponent={<span/>}\n                        width={520} height={520}\n                        data={[{'key': \"\", 'y': percentage}, {'key': \"\", 'y': (100-percentage)} ]}\n                        innerRadius={166}\n                        colorScale={[\"#19B3A6\", \"#EEEEEE\" ]}\n                        // style={{ labels: { fontSize: 20, fill: \"white\" } }}\n                        />\n                        <VictoryLabel\n                        textAnchor=\"middle\"\n                        style={{ fontSize: 50 }}\n                        x={260} y={260}\n                        text={percentage + \"%\"}\n                        />\n                    </svg>\n                    <p className=\"AccChartTitle\">percentage done</p>\n                </Grid.Column>\n                <Grid.Column width={10} className=\"AccContainerDetail\">\n                    {/* <AccCard/> */}\n                    <Grid columns='2'>\n                        <Grid.Column width='5'>\n                            <h5>See Photo Preview</h5>\n                        </Grid.Column>\n                        <Grid.Column width='10'\n                        style={\n                            {paddingLeft: '0px'}\n                        }\n                        >\n                        <img id=\"image\" src={props.achievement.photo} className=\"AccPreviewImage\"></img>\n                        </Grid.Column>\n                    </Grid>\n                </Grid.Column>\n                {/* <p>\"Example Description\"</p> */}\n            </Grid>\n            <div className=\"description\">\n                <Icon name='pencil alternate' style={{color: '#5F5F5F'}}/>{props.achievement.description}\n                {/* <p>Example Description</p> */}\n            </div>\n            <div className=\"description\">\n                <br></br>\n            </div>\n        </Segment>\n    ) \n}","import React from 'react'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nexport const AchInfo = (props) =>{\n    let avg\n    if(props.number == 0) {\n        avg = 0\n    }\n    else avg = (props.total)/props.number\n    return (\n        <Segment \n            style ={{boxShadow: \"none\"}}\n            className=\"AchInfo\"\n        >\n            <Grid columns='2' divided>\n                <Grid.Column>\n                    <p style={\n                        {textAlign:'center', fontSize: \"30px\", fontWeight: \"lighter\"}\n                    }>{props.number}</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;total number of achievements\n                </Grid.Column>\n                <Grid.Column>\n                    <p style={\n                        {textAlign:'center', fontSize: \"30px\", fontWeight: \"lighter\"}\n                    }>{avg}%</p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;average percentage complete\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n}","import React, {Component} from 'react'\nimport { Container, Segment, Grid, Label, Button } from 'semantic-ui-react'\nimport './TaskAndAchTotal.css'\nimport {TaskInfo} from './Components/TaskInfo'\nimport {Ach} from './Components/Ach'\nimport {AchInfo} from './Components/AchInfo'\n\nclass TaskAndAchTotal extends Component {\n\n    state = {\n        selectedTask: null,\n        achList: [],\n        startIndex: 0\n    }\n\n    onTaskSubmit = (id) => {\n        this.setState({selectedTask: id})\n    }\n\n    renderTaskInfo = () => {\n        let taskInfo = []\n        taskInfo = this.props.tasks.map(t => <TaskInfo task={t} onSelect={this.onTaskSubmit}   />)\n        if(taskInfo.length == 0) {\n            return <p style={{fontWeight: '600', fontSize: \"15px\"}}>&nbsp;&nbsp;No tasks added for this goal yet!</p>\n        }\n        return taskInfo\n    }\n \n    prevHandler = () => {\n        this.setState({startIndex: this.state.startIndex-1})\n    }\n \n    nextHandler = () => {\n        this.setState({startIndex: this.state.startIndex+1})\n    } \n    \n    renderAchTotal = () => {\n        if(this.state.selectedTask) {\n\n        // filter achList\n        console.log(this.props.achievements)\n        let achList\n        let total = 0\n        achList = this.props.achievements.reduce((list, a) => {\n            if(a.task == this.state.selectedTask) {\n                list.push(<Ach achievement={a}/>)\n                total = total + a.percentage_complete\n            }\n            return list\n        }, [])\n\n        return (\n            <div>\n                <p>&nbsp;ACHIEVEMENT INFO</p>\n                        <AchInfo number={achList.length} total={total}/>\n                        <br></br>\n                    <p>&nbsp;ACHIEVEMENT JOURNAL</p>\n                        {achList[this.state.startIndex]}\n                        <Button.Group floated=\"right\">\n                            <Button size=\"tiny\" icon='angle left'style={\n                                {backgroundColor: \"#FFFFFF\"}\n                            }\n                            className=\"DashPrevAch\"\n                            disabled={this.state.startIndex == 0 ? true : false}\n                            onClick={()=>this.prevHandler()}\n                            >\n                            </Button>\n                            <Button size=\"tiny\" icon='angle right'\n                            style={\n                                {backgroundColor: \"#FFFFFF\"}\n                            }\n                            className=\"DashNextAch\"\n                            disabled={this.state.startIndex == (achList.length-1) ? true : false}\n                            onClick={()=>this.nextHandler()}\n                            ></Button>\n                            {/* {console.log(\"DEBUG: next and max\", select, Math.floor(max))} */}\n                    </Button.Group>\n            </div>\n        )\n        }\n    else{\n        return(\n            <div>\n            <p>&nbsp;ACHIEVEMENT INFO</p>\n                    <p style={{fontWeight: '600', fontSize: \"15px\"}}>&nbsp;Select a task to see achievement info!</p>\n                <br></br>\n                <p>&nbsp;ACHIEVEMENT JOURNAL</p>\n                    <p style={{fontWeight: '600', fontSize: \"15px\"}}>&nbsp;Select a task to see achievement journals!</p>\n            </div>\n        )\n    }\n    }\n\n    render(){\n        console.log(this.state.selectedTask)\n        return(\n            <Segment className=\"TaskAndAchContainer\"\n            style={\n                {boxShadow: \"none\", border: \"none\"}\n                }\n                >\n                <Grid columns=\"2\" divided\n                    style={\n                        {minHeight: '700px', marginTop: '5px'}\n                    }>\n                    <Grid.Column\n                    style={\n                        {paddingTop: '0px', paddingLeft: '0px'\n                    }\n                    }\n                    width=\"7\"\n                    >\n                    <p>&nbsp;&nbsp;TASKS YOU'VE DONE</p>\n                    {this.renderTaskInfo()}\n                    </Grid.Column>\n\n                    <Grid.Column\n                    width=\"9\"\n                    style={\n                        {paddingTop: '0px',}\n                    }>\n                    {this.renderAchTotal()}\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        )\n    }\n}\n\nexport default TaskAndAchTotal","import React, {Component} from 'react'\nimport MenuBar from '../../components/Menubar/MenuBarComponent'\nimport { withRouter } from 'react-router-dom'\nimport { Button, Container } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport history from '../../history'\nimport GeneralGoalInfo from './Components/GeneralGoalInfo'\nimport TaskAndAchTotal from './TaskAndAchTotal';\nimport './GoalDetailPage.css'\nimport {getGoal, get_achievements_of_goal} from '../../store/actions'\n\nconst mapStateToProps = state => {\n    console.log(\"DETAIL selectedGoal: \", state.goal.selectedGoal)\n    return{\n        selectedGoal: state.goal.selectedGoal,\n        achievements: Object.values(state.achievement),\n        // taskList: state.task.tasks,\n    }\n}\n\nclass GoalDetailPage extends Component {\n\n\n    componentDidMount() {\n        console.log(\"mounting\")\n        this.props.getGoal(this.props.match.params.id)\n        this.props.get_achievements_of_goal(this.props.match.params.id)\n    }\n\n    render() {\n        {console.log(this.props.achievements)}\n        return (\n            <div className=\"GoalDetailPage\">\n                <div className='menubar'>\n                    <MenuBar/>\n                </div>\n                {(this.props.selectedGoal !== null)&&<GeneralGoalInfo selectedGoal={this.props.selectedGoal}/>}\n                {(this.props.selectedGoal !== null)&&<TaskAndAchTotal tasks={this.props.selectedGoal.tasks} achievements={this.props.achievements}/>}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, {getGoal, get_achievements_of_goal}) (withRouter(GoalDetailPage))\n","import React from \"react\";\nimport { Card, Icon, Button, Label, Image } from \"semantic-ui-react\";\nimport moment from 'moment'\n// import { withRouter } from 'react-router-dom'\nimport history from '../../../history'\nclass RecCard extends React.Component {\n\n  state = {\n    title: this.props.goal.title,\n    url: (this.props.goal.photo == null) ? 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/480px-No_image_available.svg.png' : this.props.goal.photo\n  }\n\n  getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  renderTags = () => {\n    let label = []\n    label = this.props.goal.tags.map(t => {\n      const color = this.randomColor()\n    return (<Label horizontal style={\n      {marginTop: '2px', marginBottom: '2px', backgroundColor: color, color: '#FFFFFF'}\n    }>{t}</Label>)\n      }\n    )\n    return label\n  }\n\n  randomColor = () => {\n    let randomNumber = this.getRandomInt(0, 5)\n    switch(randomNumber) {\n      case(0):\n        return \"#24b4ab\"\n      case(1):\n        return \"#173f5f\"\n      case(2):\n        return \"#686566\"\n      case(3):\n        return \"#20639b\"\n      case(4):\n        return \"#ed553b\"\n      case(5):\n        return \"#04837c\"\n    } \n  }\n\nonClickHandler = () => {\n    history.push('/explore/goalhistory/' + this.props.goal.id)\n  }\n\n  render() {\n    \n    const url = 'url(' + this.state.url + ')'\n    return (\n      <Card className=\"RecCardComp\" style={\n          {width: '190px'}\n      }>\n        <Card.Content\n          style={{\n            height: \"180px\",\n            backgroundImage: url,\n            backgroundSize: \"cover\",\n          }}\n        >\n        <Card.Description>\n        {this.renderTags()}\n          </Card.Description>\n        </Card.Content>\n        <Card.Content header={this.props.goal.title} \n            textAlign=\"center\"s\n            style={\n              {padding: '12px', paddingBottom: '0px'}\n            }\n            > \n        </Card.Content>\n        <Card.Description textAlign=\"center\"\n        style={\n          {color: \"#807e7e\", marginBottom: '5px'}\n        }>\n            <Icon name='user circle'></Icon>&nbsp;{this.props.goal.username}\n            </Card.Description>\n        <Card.Content extra>\n          <Button floated=\"right\" fluid onClick={this.onClickHandler}>\n            Look More\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default RecCard","import React, {Component} from 'react'\nimport { useState, useEffect } from 'react'\nimport { Icon, Sidebar, Menu, Grid, List, Segment, Button, Container, Card} from 'semantic-ui-react'\nimport RecCard from '../explore/components/RecCard'\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const RecCardsGroup = (props) => {\n\n    const [select, setSelect] = useState(0)\n    let RecCardList = props.goals.map(g => <RecCard goal={g}/>)\n\n    const renderSelect = () => {\n        return (\n            RecCardList.slice(0, (select*10)+10)\n        )\n    }\n\n    return (\n        <div className=\"RecGoalCards\"\n        style={\n            {   marginLeft: \"130px\",\n                width: '90%'\n            }\n        }>\n            <Segment\n            style={\n                {boxShadow: \"none\", border: 'none', display: 'flex'}\n                }>\n                <Card.Group>\n                {renderSelect()}\n                </Card.Group>\n            </Segment>\n            <Button style={\n                {marginLeft:'10px'}\n            }\n            className=\"ExpShowMore\"\n            disabled={(select > 0) ? true : false}\n            onClick={()=>{setSelect(select+1)}}\n            >Click for more recommendations!</Button>\n            <Button style={\n                {marginLeft:'10px'}\n            }\n            className=\"ExpShowLess\"\n            disabled={(select > 0) ? false : true}\n            onClick={()=>{setSelect(select-1)}}\n            >Hide recommendations</Button>\n        </div>\n    )\n}\n","import React, {Component} from 'react'\nimport { Grid, GridColumn } from 'semantic-ui-react'\nimport MenuBar from '../../components/Menubar/MenuBarComponent'\nimport { RecCardsGroup } from './RecCardsGroup'\nimport { explore_getAllGoal } from '../../store/actions'\nimport { connect } from 'react-redux'\n\nclass ExplorePage extends Component {\n\n    componentDidMount() {\n        console.log(\"mounting explore page\")\n        this.props.explore_getAllGoal()\n    }\n\n    render(){\n        return(\n            <div className='dashboard'>\n                <div className='menubar'>\n                    <MenuBar/>\n                </div>\n                <h3 style={\n                    {\n                        paddingLeft: \"138px\",\n                        paddingTop: \"7px\",\n                        marginTop: '15px',\n                        paddingBottom: \"10px\",\n                        fontSize: \"30px\",\n                        // borderBottom: '1px solid',\n                    }\n                }>\n                    Explore new goals\n                </h3>\n                <RecCardsGroup goals={this.props.goals}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(\"EXPLORE all goals:\", state.explore.goals)\n    return{\n        goals: state.explore.goals\n    }\n}\n\nexport default connect(mapStateToProps, {explore_getAllGoal}) (ExplorePage)","import React, {Component} from 'react'\nimport MenuBar from '../../components/Menubar/MenuBarComponent'\nimport { Button, Container } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\n// import history from '../../history'\nimport {explore_getGoal, explore_get_ach_by_goal} from '../../store/actions/index'\nimport TaskAndAchTotal from '../GoalDetail/TaskAndAchTotal'\nimport GeneralGoalInfo from '../GoalDetail/Components/GeneralGoalInfo'\n\nclass ExploreGoalDetailPage extends Component {\n\n\n    componentDidMount() {\n        // console.log(\"mounting explore detail\")\n        this.props.explore_getGoal(this.props.match.params.id)\n        this.props.explore_get_ach_by_goal(this.props.match.params.id)\n    }\n\n    render() {\n        // debugger\n        // {console.log(this.props.selectedGoal)}\n        return (\n            <div className=\"ExploreGoalDetailPage\" style={\n                {\n                    width: '80%',\n                    marginLeft: '125px',\n                    maxWidth: '1190px'\n                }\n            }>\n                <div className='menubar'>\n                    <MenuBar/>\n                </div>\n                {(this.props.selectedGoal !== null)&&<GeneralGoalInfo selectedGoal={this.props.selectedGoal}/>}\n                {(this.props.selectedGoal !== null)&&<TaskAndAchTotal tasks={this.props.selectedGoal.tasks} achievements={this.props.achievements}/>}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    // console.log(\"DETAIL EXPLORE selectedGoal: \", state.explore.selectedGoal)\n    return{\n        selectedGoal: state.explore.selectedGoal,\n        achievements: state.explore.achievements\n    }\n}\n\nexport default connect(mapStateToProps, {explore_getGoal, explore_get_ach_by_goal})(ExploreGoalDetailPage)\n","import React from 'react';\nimport { Router, Route, Redirect, Switch } from 'react-router-dom';\nimport './App.css'\nimport history from './history'\nimport HomePage from './pages/login/index'\nimport GoalList from './pages/main/GoalListComponent'\nimport CreatePage from './pages/main/CreateGoalComponent/CreateGoalComponent'\nimport EditPage from './pages/edit/EditPageComponent'\nimport DashBoard from './pages/dashboard/DashBoardComponent'\nimport GoalDetailPage from './pages/GoalDetail/GoalDetailPage'\nimport ExplorePage from './pages/explore/ExplorePageComponent'\nimport ExploreGoalDetailPage from './pages/ExploreGoalDetail/ExploreGoalDetailPage'\n\nfunction App(props) {\n    return (\n    <Router history={history}>\n        <div className=\"App\" id=\"fill-window\">\n            <Switch>\n                <Route path=\"/\" exact component={HomePage} />\n                <Route path=\"/create\" exact component={CreatePage}/>\n                <Route path=\"/edit\" exact component={EditPage}/>\n                <Route path=\"/main\" exact component={GoalList} />\n                <Route path=\"/dashboard\" exact component={DashBoard} />\n                <Route path=\"/explore\" exact component={ExplorePage} />\n                <Route path=\"/explore/goalhistory/:id\" exact component={ExploreGoalDetailPage} />\n                <Route path=\"/goalhistory/:id\" exact component={GoalDetailPage}/>\n                {/* <Route path=\"/profile\" exact component={Profile} /> */}\n            </Switch>\n        </div>\n    </Router>\n    )\n}\n\nexport default App","import * as actionTypes from '../actions/types'\n\nconst initialState = {\n    goals: [\n    ],\n    selectedGoal: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.GET_ALL_GOAL:\n            return {...state, goals: action.payload}\n\n        case actionTypes.GET_GOAL:\n            return {...state, selectedGoal: action.payload}\n\n        case actionTypes.ADD_GOAL:\n            const newGoal = action.payload\n            return {...state, goals: [...state.goals, newGoal]}\n\n        case actionTypes.EDIT_GOAL:\n            // remove the old item and add the new item\n            console.log(state.goals.filter(g => g.id !== action.payload.id))\n            let filteredGoals = state.goals.filter(g => g.id !== action.payload.id).concat([action.payload])\n            return {...state, selectedGoal: action.payload, goals: filteredGoals}\n            /*\n            const modifiedGoalList = state.goals.map((g)=> {\n                if(g.id == action.id) {\n                    return {...g, title: action.title, photo: action.photo, deadline: action.deadline, tags: action.tags}\n                } else {\n                    return g\n                }\n            })\n            state.goals = modifiedGoalList\n            const modified = modifiedGoalList.find(g=>g.id==action.id)\n            return {...state, selectedGoal: modified}\n            */\n\n        case actionTypes.EDIT_TASK_OF_SELECTED_GOAL:\n            const filteredTasks = state.selectedGoal.tasks.filter(task => task.id !== action.payload.id)\n            let modifiedSelectedGoal = {...state.selectedGoal, tasks: [...filteredTasks, action.payload]}\n            return {...state, selectedGoal: modifiedSelectedGoal}\n\n        case actionTypes.DELETE_GOAL:\n            // g.id and action.id should be both integer (the same type)\n            const deleted = state.goals.filter(g => g.id !== action.id)\n            return {...state, goals: deleted}\n\n        case actionTypes.ADD_TASK_TO_GOAL:\n            const target = state.goals.filter(goal => goal.id === action.payload.goal)[0]\n            const rest = state.goals.filter(goal => goal.id !== action.payload.goal)\n            return { ...state, goals: [...rest, {...target, tasks: [...target.tasks, action.payload]}]}\n\n        case actionTypes.DELETE_TASK_FROM_GOAL:\n            const target_delete = state.goals.filter(goal => goal.id === action.payload.goal_id)[0]\n            const target_deleted_task = target_delete.tasks.filter(t => t.id !== action.payload.task_id)\n            const updated_goal = {...target_delete, tasks: target_deleted_task}\n            const rest_delete = state.goals.filter(goal => goal.id !== action.payload.goal_id)\n            return { ...state, goals: [...rest_delete, updated_goal], selectedGoal: updated_goal}\n\n        default:\n            break\n    }\n    return state\n}\n\nexport default reducer","import * as actionTypes from '../actions/types'\n\nconst initialState = {\n    tasks: [\n    ],\n    selectedTask: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.GET_ALL_TASK:\n            return {...state, tasks: action.payload}\n        case actionTypes.ADD_TASK:\n            const newTask = action.payload\n            return {...state, tasks: [...state.tasks, newTask]}\n        case actionTypes.DELETE_TASK:\n            const deleted = state.tasks.filter(t => t.id !== action.payload)\n            return {...state, tasks: deleted}\n        case actionTypes.EDIT_TASK: {\n            const filtered = state.tasks.filter(task => task.id !== action.payload.id)\n            return { ...state, tasks: [...filtered, action.payload]}\n        }\n        // case actionTypes.EDIT_TASK_OF_ACHIEVEMENT: {\n        //     const filtered = state.tasks.filter(task => task.id !== action.payload.task)\n        //     const target = state.tasks.filter(task => task.id === action.payload.task)[0]\n        //     target.achievements.filter(achv => achv.id !== action.payload.id)\n        //     target.achievements.append(action.payload)\n        //     return { ...state, tasks: [...filtered, target]}\n        // }\n        default:\n            break\n    }\n    return state\n}\n\nexport default reducer","import _ from 'lodash';\nimport * as actionTypes from '../actions/types'\n\nconst reducer = (state = {}, action) => {\n    switch(action.type) {\n        case actionTypes.GET_ACHIEVEMENTS_OF_TASK:\n            return {...state, ..._.mapKeys(action.payload, 'id')}\n        case actionTypes.GET_ACHIEVEMENTS_OF_GOAL:\n            return {...state, ..._.mapKeys(action.payload, 'id')}\n        case actionTypes.ADD_ACHIEVEMENT:\n            return {...state, [action.payload.id]: action.payload}\n        case actionTypes.EDIT_ACHIEVEMENT:\n            return {...state, [action.payload.id]: action.payload};\n        case actionTypes.DELETE_ACHIEVEMENT:\n            return _.omit(state, action.payload);\n        default:\n            return state\n    }\n}\nexport default reducer\n\n/* \nWhen use state.achievement in a component, fetch it like below:\n\nconst mapStateToProps = state => {\n    return {\n        ...,\n        achievements: Object.values(state.achievement),\n    };\n};\n*/","import * as ActionTypes from '../actions/types'\n\nconst initialState = {\n    authModal: false,\n    addTask: false,\n    addAcc: false\n}\n\nconst modalReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.CLOSE_MODAL:\n            return { authModal: false, addTask: false, addAcc: false }\n        case ActionTypes.OPEN_AUTH_MODAL:\n            return { authModal: true }\n        case ActionTypes.OPEN_ADD_TASK_MODAL:\n            return {addTask: true}\n        case ActionTypes.CLOSE_ADD_TASK_MODAL:\n            return {addTask: false}\n        case ActionTypes.OPEN_ADD_ACC_MODAL:\n            return {addAcc: true}\n        case ActionTypes.CLOSE_ADD_ACC_MODAL:\n            return {addAcc: false}\n        default:\n            return state\n    }\n}\n\nexport default modalReducer","import * as actionTypes from '../actions/types'\n\nconst initialState = {\n    // exploreStatus: null,\n    goals: [],\n    selectedGoal: null,\n    achievements:[]\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.EXPLORE_GET_ALL_GOAL:\n            return {...state, goals: action.goals}\n        case actionTypes.EXPLORE_GET_GOAL:\n            return {...state, selectedGoal: action.target}\n        case actionTypes.EXPLORE_GET_ACH_BY_GOAL:\n            return {...state, achievements: action.achievements}\n        default:\n            break\n    }\n    return state\n}\n\nexport default reducer","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport goalReducer from './goalReducer'\nimport taskReducer from './taskReducer'\nimport achievementReducer from './achievementReducer'\nimport { connectRouter } from 'connected-react-router'\nimport history from '../../history'\nimport modalReducer from './modalReducer'\nimport exploreReducer from './exploreReducer'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  goal: goalReducer,\n  task: taskReducer,\n  achievement: achievementReducer,\n  modal: modalReducer,\n  explore: exploreReducer,\n  router: connectRouter(history)\n})\n\nexport default rootReducer\n","import * as actionTypes from '../actions/types'\n\n/*\nstate: {\n  id: number\n  username: string\n}\n*/\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case actionTypes.SIGNUP_USER:\n      return action.payload\n\n    case actionTypes.LOGIN_USER:\n      return action.payload\n\n    case actionTypes.LOGOUT_USER:\n      return null\n      \n    default:\n      return state\n  }\n}","import rootReducer from './reducers/rootReducer'\n\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';                                           \nimport { routerMiddleware } from 'connected-react-router';\nimport history from '../history'\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log(\"[Middleware] Dispatching\", action)\n            const result = next(action)\n            console.log(\"[Middleware] Next State\", store.getState())\n            return result\n        }\n    }\n}\nexport const middlewares = [logger, thunk, routerMiddleware(history)]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, {},\n    composeEnhancers(applyMiddleware(...middlewares)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './store/store'\nimport history from './history'\nimport 'semantic-ui-css/semantic.min.css'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Provider store={store}><App history={history}/></Provider>, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n// serviceWorker.unregister();\n"],"sourceRoot":""}